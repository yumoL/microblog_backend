{"version":3,"sources":["hooks/useField.js","services/utils.js","services/user.js","reducers/userReducer.js","reducers/notificationReducer.js","components/LoginForm.js","hooks/useDebounce.js","components/ValidateInput.js","components/RedirectToMain.js","components/RegisterForm.js","components/Notification.js","components/blogPage/Images/SingleImage.js","components/blogPage/BlogInput.js","services/blogs.js","reducers/blogReducer.js","components/HomePage.js","components/ProtectedRoute.js","components/NotFoundPage.js","components/Navbar.js","components/Setting.js","components/blogPage/Images/Images.js","components/blogPage/Blog.js","components/blogPage/BlogList.js","components/Profile.js","components/FrontPage.js","App.js","store.js","index.js"],"names":["useField","type","defaultedValue","useState","value","setValue","onChange","e","target","clear","token","getConfig","headers","Authorization","uploadFile","formData","a","axios","post","res","console","log","data","setToken","newToken","destroyToken","checkUserNameExisted","userName","register","newUser","login","user","changeBasicInfo","id","userToUpdate","patch","changePwd","lsKey","initialState","userNameExisted","storeUserToLocalStorage","window","localStorage","setItem","JSON","stringify","utilService","dispatch","userService","userInfo","logout","removeItem","userReducer","state","action","loggedInUser","updatedUser","setNotification","message","error","timeout","content","setTimeout","notificationReducer","mapDispatchToProps","withRouter","connect","props","password","loginButtonDisabled","length","handleSubmit","preventDefault","from","location","pathname","className","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","required","Button","disabled","Message","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","ValidateInput","fieldName","input","minLength","maxLength","extraRequirement","extraErrorMessage","RedirectToMain","position","top","left","transform","file","registerSuccess","setRegisterSuccess","passwordConfirm","debouncedUsername","existedUserName","submitButtonDisabled","notification","Transition","visible","animation","duration","right","zIndex","floating","SingleImage","image","toUpload","removeImage","Modal","key","trigger","Image","src","Content","wrapped","Icon","name","onClick","BlogInput","files","setFiles","tempUrls","setTempUrls","setId","FormData","map","append","fileContent","createBlog","userId","imageInput","React","createRef","Field","TextArea","minHeight","current","click","accept","ref","fileToAdd","tempUrl","urlContent","URL","createObjectURL","width","Row","columns","url","filter","find","newBlog","getBlogsByUser","pageIndex","get","blogReducer","publishedBlog","blogList","uploadedPic","urls","blogService","blog","isAuthenticated","Component","component","rest","render","NotFoundPage","onLogin","onRegister","onHome","onProfile","includes","onDiscover","Menu","tabular","Item","active","Link","Dropdown","item","text","newUserName","uploadedUrl","newPicture","pwd","newPwd","oldPwd","newPwdConfirm","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","handleBasicInfoChange","handlePwdChange","disableChangeBasicInfoButton","disableChangePwdButton","picture","Images","images","Blog","imagesArray","Comment","Avatar","marginGight","Author","Metadata","Text","BlogList","Group","getBlogs","Divider","initUser","loggedInUserJson","getItem","parse","path","HomePage","match","params","Setting","exact","history","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","jwtDecode","exp","Date","now","alert","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.599ecf8b.chunk.js","sourcesContent":["import { useState } from 'react'\n\nexport const useField = (type, defaultedValue) => {\n  const [value, setValue] = useState(defaultedValue ? defaultedValue : '')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const clear = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    clear\n  }\n}","import axios from 'axios'\nconst baseUrl = '/api/utils'\n\nlet token = null\n\nexport const getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst destroyToken = () => {\n  token = null\n}\n\nconst uploadFile = async formData => {\n  const res = await axios.post(`${baseUrl}/upload`, formData, getConfig())\n  console.log('return', res.data)\n  return res.data\n}\n\nexport default {\n  uploadFile,\n  setToken,\n  destroyToken\n}","import axios from 'axios'\nimport { getConfig } from '../services/utils'\nconst baseUrl = '/api/user'\n\n// res.data = ctx.body of backend\n\nconst checkUserNameExisted = async userName => {\n  const res = await axios.post(`${baseUrl}/isExist`, { userName })\n  return res.data\n}\n\nconst register = async newUser => {\n  const res = await axios.post(`${baseUrl}/register`, newUser)\n  return res.data\n}\n\nconst login = async user => {\n  const res = await axios.post(`${baseUrl}/login`, user)\n  return res.data\n}\n\nconst changeBasicInfo = async (id, userToUpdate) => {\n  const res = await axios.patch(`${baseUrl}/changeInfo/${id}`, userToUpdate, getConfig())\n  console.log('returnUser', res.data)\n  return res.data\n}\n\nconst changePwd = async (id, userToUpdate) => {\n  const res =await axios.patch(`${baseUrl}/changePwd/${id}`, userToUpdate, getConfig())\n  return res.data\n}\n\nexport default {\n  checkUserNameExisted,\n  register,\n  login,\n  changeBasicInfo,\n  changePwd\n}\n\n","import userService from '../services/user'\nimport utilService from '../services/utils'\n\nexport const lsKey = 'loggedInUser'\n\nexport const initialState = {\n  userNameExisted: false\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'REGISTER':\n    return initialState\n  case 'USERNAME_EXISTED':\n    return { ...state, userNameExisted: action.userNameExisted }\n  case 'SET_USER':\n    return action.loggedInUser\n  case 'CLEAR_USER':\n    return initialState\n  case 'UPDATE_USER_INFO':\n    return action.updatedUser\n  default:\n    return state\n  }\n}\n\nconst storeUserToLocalStorage = user => {\n  window.localStorage.setItem(lsKey, JSON.stringify(user))\n  utilService.setToken(user.token)\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedInUserJson = window.localStorage.getItem(lsKey)\n    if (loggedInUserJson) {\n      const loggedInUser = JSON.parse(loggedInUserJson)\n      utilService.setToken(loggedInUser.token)\n      dispatch({\n        type: 'SET_USER',\n        loggedInUser\n      })\n    }\n  }\n}\n\nexport const checkUserNameExisted = userName => {\n  return async dispatch => {\n    const userInfo = await userService.checkUserNameExisted(userName)\n    const userNameExisted = userInfo.data ? true : false\n    dispatch({\n      type: 'USERNAME_EXISTED',\n      userNameExisted\n    })\n  }\n}\n\nexport const register = newUser => {\n  return async dispatch => {\n    await userService.register(newUser)\n    dispatch({\n      type: 'REGISTER'\n    })\n  }\n}\n\nexport const login = user => {\n  return async dispatch => {\n    const res = await userService.login(user)\n    const loggedInUser = res.data\n    storeUserToLocalStorage(loggedInUser)\n    dispatch({\n      type: 'SET_USER',\n      loggedInUser\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    utilService.destroyToken()\n    window.localStorage.removeItem(lsKey)\n    dispatch({\n      type: 'CLEAR_USER'\n    })\n  }\n}\n\nexport const changeBasicInfo = (id, newUserName, formData) => {\n  return async dispatch => {\n    let userToUpdate = {\n      newUserName\n    }\n    if(formData !== null){\n      // upload picture and get the saved picture url from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: [url]\n     * }\n     */\n      const uploadedUrl = uploadedPic.data[0] //the first element of data array as we only have one picture here\n      console.log('suc model', uploadedPic.data[0])\n      userToUpdate = {\n        ...userToUpdate,\n        newPicture: uploadedUrl\n      }\n    }\n\n    const res = await userService.changeBasicInfo(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\n\nexport const changePwd = (id, pwd, newPwd) => {\n  return async dispatch => {\n    const userToUpdate = {\n      pwd,\n      newPwd\n    }\n    const res = await userService.changePwd(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\nexport default userReducer\n\n","const notificationReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return {}\n  default:\n    return state\n  }\n}\n\nexport const setNotification = ({ message, error = false, timeout=5000 }) => {\n  const content = {\n    message,\n    error\n  }\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, timeout)\n  }\n}\n\nexport default notificationReducer","/**\n * @description login form\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport { useField } from '../hooks/useField'\nimport { login } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst LoginForm = props => {\n  const userName = useField('text')\n  const password = useField('password')\n\n  const loginButtonDisabled = userName.value.length === 0 || password.value.length === 0\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const user = {\n      userName: userName.value,\n      password: password.value\n    }\n    try {\n      await props.login(user)\n    } catch (e) {\n      props.setNotification({ message: 'Login failed, wrong username or password', error: true })\n    }\n  }\n\n  const { from } = props.location.state || { from: { pathname: '/home' } }\n  if (props.user.token) {\n    props.setNotification({ message: 'You have logged in', error: false })\n    return (\n      <div className='redirect'>\n        <Redirect to={from} />\n      </div>\n\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header id='loginHeader' as='h2' color='teal' textAlign='center'>\n            Log in to your account\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input id='userName' fluid icon='user' iconPosition='left' placeholder='User Name' {...userName} required />\n              <Form.Input\n                id='pwd'\n                fluid\n                icon='lock'\n                placeholder='Password'\n                {...password}\n                required\n              />\n              <Button id='loginButton' type='submit' color='teal' fluid size='large' disabled={loginButtonDisabled}>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to='/register'>Sign Up</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  setNotification\n}\n\nLoginForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LoginForm)\n)","/**\n * @description Simple debounce so that the api won't be called rapidly\n */\nimport { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      return () => {\n        clearTimeout(handler)\n      }\n    }, [value, delay]\n  )\n\n  return debouncedValue\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ValidateInput = props => {\n  const { fieldName, input, minLength, maxLength, extraRequirement, extraErrorMessage } = props\n  if (!input) {\n    return null\n  }\n  if ((minLength && maxLength) && (input.length < minLength || input.length > maxLength)) {\n    return (\n      <p style={{ color: 'red' }}>\n        {fieldName} should be between {minLength} and {maxLength} characters\n      </p>\n    )\n  }\n  if (extraRequirement === false) {\n    return (\n      <p style={{ color: 'red' }}>\n        {extraErrorMessage}\n      </p>\n    )\n  }\n  return (\n    <p style={{ color: 'green' }}>\n      Valid {fieldName}\n    </p>\n  )\n}\n\nValidateInput.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  extraRequirement: PropTypes.bool,\n  extraErrorMessage: PropTypes.string\n}\n\nexport default ValidateInput","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst RedirectToMain = () => {\n  return (\n    <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}>\n      <h3>You have already logged in, please go to the\n        <Link to='/home'> main page</Link> directly</h3>\n    </div>\n  )\n}\n\nexport default RedirectToMain","/**\n * @description register form\n */\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { checkUserNameExisted, register } from '../reducers/userReducer'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ValidateInput from './ValidateInput'\nimport RedirectToMain from './RedirectToMain'\n\n\nconst RegisterForm = props => {\n  const [registerSuccess, setRegisterSuccess] = useState(false)\n  const userName = useField('text')\n  const password = useField('password')\n  const passwordConfirm = useField('password')\n  const debouncedUsername = useDebounce(userName.value, 500)\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const submitButtonDisabled = props.user.userNameExisted || userName.value.length < 3 || userName.value.length > 255 || password.value.length < 3 || password.value.length > 255 || password.value !== passwordConfirm.value\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const newUser = {\n      userName: userName.value,\n      password: passwordConfirm.value\n    }\n    try {\n      await props.register(newUser)\n      setRegisterSuccess(true)\n      //props.history.push('/login')\n      props.setNotification({ message: 'Register succeeded, please log in', error: false })\n    } catch (e) {\n      props.setNotification({ message: 'Register failed', error: true })\n    }\n  }\n\n  if (registerSuccess) {\n    return (\n      <div className='redirect'>\n        <Redirect to='/login' />\n      </div>\n    )\n  }\n\n  if (props.user.token) {\n    return (\n      <RedirectToMain />\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header id='signUp' as='h2' color='teal' textAlign='center'>\n            Sign Up\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input id='userName' fluid icon='user' iconPosition='left' placeholder='Username (between 3 and 255 characters)'\n                {...userName} required\n              />\n              <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n                extraRequirement={!props.user.userNameExisted} extraErrorMessage={'User name is already existed'} />\n              <Form.Input\n                id='pwd'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password (between 3 and 255 characters)'\n                {...password}\n                required\n              />\n              <ValidateInput fieldName={'Password'} input={password.value} minLength={3} maxLength={255} />\n              <Form.Input\n                id='pwdConfirm'\n                fluid\n                placeholder='Confirm Your Password'\n                {...passwordConfirm}\n                required\n              />\n              <ValidateInput fieldName={'Password confirmation'} input={passwordConfirm.value}\n                extraRequirement={password.value === passwordConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n              <Button id='register' color='teal' fluid size='large' disabled={submitButtonDisabled}>\n                Sign Up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>Already have an account? <Link to='/login'>Back to login</Link></Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    file: state.file\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  register,\n  setNotification\n}\n\nRegisterForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  checkUserNameExisted: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegisterForm)\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Message, Transition } from 'semantic-ui-react'\n\nconst Notification = props => {\n  const { message, error } = props.notification\n\n  const style = {\n    position: 'fixed !important',\n    top: '32px',\n    right: '0',\n    left: '0',\n    textAlign: 'center',\n    zIndex: '10000'\n  }\n\n  if(!message) return null\n\n  return (\n    <Transition visible={!!message} animation='fly down' duration={250}>\n      <div style={style}>\n        {!error ? (\n          <Message floating color='green' size='large'>\n            {message}\n          </Message>\n        ) : (\n          <Message floating color='red' size='large'>\n            {message}\n          </Message>\n        )}\n      </div>\n\n\n    </Transition>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  }\n}\n\nNotification.propTypes = {\n  notification: PropTypes.object.isRequired\n}\n\nexport default connect(\n  mapStateToProps\n)(Notification)","import React from 'react'\nimport { Image, Modal, Icon } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nconst SingleImage = ({ image, toUpload, removeImage }) => {\n  if(!image)return null\n\n  return(\n    <div id='image'>\n      <Modal key={image} trigger={<Image src={image} size=\"medium\" />}>\n        <Modal.Content image>\n          <Image wrapped src={image} />\n        </Modal.Content>\n      </Modal>\n      {toUpload&&(<Icon name=\"delete\" onClick={removeImage}/>)}\n    </div>\n  )\n}\n\nSingleImage.propTypes = {\n  image: PropTypes.string,\n  toUpload: PropTypes.bool,\n  removeImage: PropTypes.func\n}\nexport default SingleImage","import React, { useState } from 'react'\nimport { Form, TextArea, Button, Icon, Grid } from 'semantic-ui-react'\nimport { useField } from '../../hooks/useField'\nimport PropTypes from 'prop-types'\nimport SingleImage from './Images/SingleImage'\n\nconst BlogInput = props => {\n  const [files, setFiles ] = useState([])\n  const [tempUrls, setTempUrls ] = useState([])\n  const content = useField('text')\n  const [id, setId] = useState(0)\n\n  const handleFileChange = e => {\n    if(files.length===3){\n      props.setNotification({ message:'You can upload max 3 images', error:true })\n      return\n    }\n    setId(id+1)\n    const fileToAdd = {\n      fileContent: e.target.files[0],\n      id\n    }\n    const tempUrl = {\n      urlContent: URL.createObjectURL(fileToAdd.fileContent),\n      id\n    }\n    setFiles([...files, fileToAdd])\n    setTempUrls([...tempUrls, tempUrl])\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    let formData = null\n    if(files.length > 0){\n      formData = new FormData()\n      files.map(file => formData.append('file',file.fileContent))\n    }\n    await props.createBlog(props.userId, content.value, formData )\n    setFiles([])\n    setTempUrls([])\n    setId(0)\n    content.clear()\n    props.setNotification({ message:'You created a blog', error: false })\n  }\n  let imageInput = React.createRef()\n  const insertImageButtonOnClick = () => {\n    imageInput.current.click()\n  }\n\n  const removeImage = id => {\n    setFiles(files.filter(file => file.id!==id))\n    setTempUrls(tempUrls.filter(url => url.id!==id))\n  }\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <TextArea id='blogTextField' placeholder='new blog...' {...content} style={{ minHeight: 100 }} clear='clear'/>\n          <Button id='insertImageButton' type='button' onClick={insertImageButtonOnClick}><Icon name='picture'/>insert an image (max 3)</Button>\n          <input id='fileInput' type='file' accept='image/*' ref={imageInput} onChange={handleFileChange} style={{ 'display':'none' }}/>\n        </Form.Field>\n        {files.length>0&&<Grid style={{ height:'33%', width:'33%' }}>\n          {<Grid.Row columns={3} >\n            {tempUrls.map(url => <Grid.Column key={url.id}>\n              <SingleImage image={url.urlContent} toUpload={true}\n                removeImage={() => removeImage(tempUrls.find(tempUrl => tempUrl.urlContent===url.urlContent).id)}/>\n            </Grid.Column>)}\n          </Grid.Row>}\n        </Grid>}\n        <Button id='publishBlogButton' color='green'>Publish your microblog</Button>\n      </Form>\n    </div>\n  )\n}\n\nBlogInput.propTypes = {\n  userId: PropTypes.number.isRequired,\n  createBlog: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n}\n\nexport default BlogInput","import axios from 'axios'\nimport { getConfig } from './utils'\nconst baseUrl = '/api/blog'\n\nconst createBlog = async (userId, newBlog ) => {\n  const res = await axios.post(`${baseUrl}/create/${userId}`, newBlog, getConfig())\n  return res.data\n}\n\nconst getBlogsByUser = async (userId, pageIndex=0) => {\n  const res = await axios.get(`${baseUrl}/profile/${userId}/${pageIndex}`, getConfig())\n  console.log('service res', res.data)\n  return res.data\n}\n\nexport default { createBlog, getBlogsByUser }","import blogService from '../services/blogs'\nimport utilService from '../services/utils'\n\nconst blogReducer = (state={}, action) => {\n  switch (action.type) {\n  case 'CREATE_BLOG':\n    return action.publishedBlog\n  case 'GET_BLOGS_BY_USER':\n    return action.blogList\n  default:\n    return state\n  }\n}\n\nexport const createBlog = (userId, content, formData) => {\n  return async dispatch => {\n    let newBlog = {\n      content\n    }\n\n    if(formData !== null){\n      // upload picture and get the urls of saved pictures from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: [url]\n     * }\n     */\n      const urls = uploadedPic.data\n      newBlog = {\n        ...newBlog,\n        urls\n      }\n    }\n    const res = await blogService.createBlog(userId, newBlog)\n    const publishedBlog = res.data\n    dispatch({\n      type: 'CREATE_BLOG',\n      publishedBlog\n    })\n  }\n}\n\nexport const getBlogsByUser = (userId, pageIndex) => {\n  return async dispatch => {\n    const res = await blogService.getBlogsByUser(userId, pageIndex)\n    const blogList = res.data\n    console.log('blogList', blogList)\n    dispatch({\n      type: 'GET_BLOGS_BY_USER',\n      blogList\n    })\n  }\n}\n\nexport default blogReducer","import React from 'react'\nimport BlogInput from './blogPage/BlogInput'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\n/**\n * Create new blogs, show user's blogs and blogs of people the user follows\n */\nconst HomePage = props => {\n  return (\n    <div>\n      <BlogInput userId={props.user.id} createBlog={props.createBlog} setNotification={props.setNotification}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    blog: state.blog\n  }\n}\n\nconst mapDispatchToProps = {\n  createBlog,\n  setNotification\n}\n\nHomePage.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage)\n","import React from 'react'\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst ProtectedRoute = props => {\n  const isAuthenticated = props.user.token ? true : false\n  const { component: Component, ...rest } = props\n\n  return (\n    <Route {...rest} render={(props) => (\n      isAuthenticated\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object.isRequired,\n  component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n  )(ProtectedRoute)\n)","import React from 'react'\n\nconst NotFoundPage = () => {\n  return <div>The page cannot be found...</div>\n}\n\nexport default NotFoundPage","/* eslint-disable eqeqeq */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown, Button } from 'semantic-ui-react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { logout } from '../reducers/userReducer'\n\nconst Navbar = props => {\n  const onLogin = props.location.pathname == '/login'\n  const onRegister = props.location.pathname == '/register'\n  const onHome = props.location.pathname == '/home'\n  const onProfile = props.location.pathname.includes('/profile')\n  const onDiscover = props.location.pathname == '/discover'\n\n\n  if(!props.user.token) {\n    return (\n      <Menu tabular>\n        <Menu.Item\n          id='loginMenu'\n          name='Login'\n          active={onLogin}\n          as={Link}\n          to='/login'/>\n        <Menu.Item\n          id='registerMenu'\n          name='Register'\n          active={onRegister}\n          as={Link}\n          to='/register'/>\n      </Menu>\n    )\n  }\n  return (\n    <Menu tabular>\n      <Menu.Item\n        id='homeMenu'\n        name='Home'\n        active={onHome}\n        as={Link}\n        to='/home'/>\n      <Menu.Item\n        id='profileMenu'\n        name='Profile'\n        active={onProfile}\n        as={Link}\n        to={`/profile/${props.user.id}/0`}/>\n      <Menu.Item\n        name='Discover'\n        active={onDiscover}\n        as={Link}\n        to='/discover'/>\n      <Menu.Menu\n        position='right'\n      >\n        <Dropdown id='settingDropdown' item text='Setting'>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              id='accountSettingItem'\n              as={Link} to='/setting'>\n              Account setting\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <Button id='logoutButton' onClick={props.logout}><Link to='/login'>Logout</Link></Button>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  logout\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar))\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Form, Grid, Header, Button, Image } from 'semantic-ui-react'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport ValidateInput from './ValidateInput'\nimport { checkUserNameExisted, changeBasicInfo, changePwd } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Setting = props => {\n  const userName = useField('text', props.user.userName)\n  const debouncedUsername = useDebounce(userName.value, 500)\n  const oldPwd = useField('password')\n  const newPwd = useField('password')\n  const newPwdConfirm = useField('password')\n\n  const [selectedFile, setSelectedFile]=useState(null)\n  const [previewUrl, setPreviewUrl ] = useState('')\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const handleBasicInfoChange = async e => {\n    e.preventDefault()\n    let formData = null\n    if(selectedFile !== null){\n      formData = new FormData()\n      formData.append('file', selectedFile)\n    }\n    try{\n      await props.changeBasicInfo(props.user.id, userName.value, formData )\n      props.setNotification({ message: 'You have changed your basic information', error: false })\n    } catch (e){\n      props.setNotification( { message:'Fail to change basic information', error: true })\n    }\n  }\n\n  const handleFileChange = e => {\n    const file = e.target.files[0]\n    setSelectedFile(file)\n    setPreviewUrl(URL.createObjectURL(file))\n  }\n\n  const handlePwdChange = async e => {\n    e.preventDefault()\n    try{\n      await props.changePwd(props.user.id, oldPwd.value, newPwd.value)\n      props.setNotification({ message: 'You have changed your password', error: false })\n    }catch (e){\n      props.setNotification( { message:'Fail to change password, please make sure that your old password is correct', error: true })\n    }\n    oldPwd.clear()\n    newPwd.clear()\n    newPwdConfirm.clear()\n  }\n\n  const disableChangeBasicInfoButton = (props.user.userNameExisted && userName.value !== props.user.userName) ||\n                                        userName.value.length < 3 || userName.value.length > 255\n  const disableChangePwdButton = newPwd.value.length <3 || newPwd.value.length>255 || newPwd.value!==newPwdConfirm.value\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n        Account Setting\n        </Header>\n        <Header as='h3' color='teal' textAlign='center'>\n        Basic information\n        </Header>\n        <Form onSubmit={handleBasicInfoChange}>\n          <Form.Field>\n            <label>User name</label>\n            <input id='newUserNameField' {...userName} clear='clear'/>\n            <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n              extraRequirement={!props.user.userNameExisted || userName.value===props.user.userName} extraErrorMessage={'User name is already existed'} />\n          </Form.Field>\n          <Form.Field>\n            <label>Change head portrait</label>\n            <Form.Input type='file' accept='image/*' onChange={handleFileChange} />\n            <Image src={previewUrl!=='' ? previewUrl : props.user.picture} size='small' />\n          </Form.Field>\n          <Button id='saveBIChangeButton' color='teal' fluid size='large' disabled={disableChangeBasicInfoButton}>\n            Save basic information changes\n          </Button>\n        </Form>\n        <Header as='h3' color='teal' textAlign='center'>\n            Password\n        </Header>\n        <Form onSubmit={handlePwdChange}>\n          <Form.Field>\n            <label>Current password</label>\n            <input id='oldPwdField' placeholder='current password' {...oldPwd} clear='clear'/>\n          </Form.Field>\n\n          <Form.Field>\n            <label>New password</label>\n            <input id='newPwdField' placeholder='new password' {...newPwd} clear='clear' />\n            <ValidateInput fieldName={'Password'} input={newPwd.value} minLength={3} maxLength={255} />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm new password</label>\n            <input id='pwdConfirmField' placeholder='new password confirmation' {...newPwdConfirm} clear='clear'/>\n          </Form.Field>\n          <ValidateInput fieldName={'Password confirmation'} input={newPwdConfirm.value}\n            extraRequirement={newPwd.value === newPwdConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n          <Button id='pwdSaveButton' color='teal' fluid size='large' disabled={disableChangePwdButton}>\n            Save new password\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state  => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  changeBasicInfo,\n  changePwd,\n  setNotification\n}\n\nSetting.propTypes = {\n  checkUserNameExisted: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  changeBasicInfo: PropTypes.func.isRequired,\n  changePwd:PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Setting)","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\nimport SingleImage from './SingleImage'\n\nconst Images = props => {\n  return (\n    <div>\n      <Grid>\n        {<Grid.Row columns={3} >\n          {props.images.map(url => <Grid.Column key={url}>\n            <SingleImage image={url} />\n          </Grid.Column>)}\n        </Grid.Row>}\n      </Grid>\n    </div>\n  )\n}\n\nImages.propTypes = {\n  images: PropTypes.array.isRequired,\n  toUpload: PropTypes\n}\n\nexport default Images","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Comment } from 'semantic-ui-react'\nimport Images from './Images/Images'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog }) => {\n  const imagesArray = blog.images.map(image => image.url)\n  return (\n    <>\n      <Comment>\n        <Comment.Avatar src={blog.user.picture} style={{ marginGight: '0px' }}/>\n        <Comment.Author>\n          <Link to={`/profile/${blog.userId}/0`}>{blog.user.userName}</Link>\n        </Comment.Author>\n        <Comment.Content>\n          <Comment.Metadata>\n            <div>2019.1.1 19:00</div>\n          </Comment.Metadata>\n          <Comment.Text>\n            {blog.content}\n            <Images images={imagesArray} />\n          </Comment.Text>\n        </Comment.Content>\n      </Comment>\n    </>\n  )\n}\nBlog.propTypes = {\n  blog: PropTypes.object\n}\n\nexport default Blog","import React from 'react'\nimport Blog from './Blog'\nimport { Comment } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nconst BlogList = props => {\n  return (\n    <div>\n      <Comment.Group>\n        {props.blogList.map(blog => (\n          <div key={blog.id}>\n            <Blog blog={blog}/>\n          </div>\n        ))}\n      </Comment.Group>\n    </div>\n\n  )\n}\nBlogList.propTypes = {\n  blogList: PropTypes.array\n}\nexport default BlogList","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Divider } from 'semantic-ui-react'\nimport { getBlogsByUser } from '../reducers/blogReducer'\nimport BlogList from './blogPage/BlogList'\n\nconst Profile = (props) => {\n  const { userId } = props\n\n  useEffect(() => {\n    async function getBlogs() {\n      await props.getBlogsByUser(userId, 0)\n    }\n    getBlogs()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if(!props.blog.blogList)return null\n\n  if(props.blog.blogList.length===0) {\n    return (\n      <div>\n        No blog\n        <Divider />\n      </div>\n    )\n  }\n  return (\n    <div>\n      <BlogList blogList={props.blog.blogList}/>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    blog: state.blog\n  }\n}\n\nconst mapDispatchToProps = {\n  getBlogsByUser\n}\nProfile.propTypes = {\n  getBlogsByUser: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  blog: PropTypes.object,\n  userId: PropTypes.string.isRequired\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Profile)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst FrontPage = props => {\n  if(props.user.token) {\n    return(\n      <Redirect to='/home' />\n    )\n  }\n  return (\n    <h1>Welcome to our Microblog Platform!</h1>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nFrontPage.propTypes = {\n  user: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(FrontPage)","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport Notification from './components/Notification'\nimport { initUser } from './reducers/userReducer'\nimport HomePage from './components/HomePage'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFoundPage from './components/NotFoundPage'\nimport Navbar from './components/Navbar'\nimport Setting from './components/Setting'\nimport Profile from './components/Profile'\nimport FrontPage from './components/FrontPage'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initUser()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"App\" style={{ textAlign:'left' }}>\n      <Notification />\n      <Router>\n        <Navbar />\n        <Switch>\n          <ProtectedRoute path='/home' component={HomePage} />\n          <ProtectedRoute path='/profile/:userId/:pageIndex'\n            component={({ match }) => <Profile userId={match.params.userId}/>} />\n          <ProtectedRoute path='/setting' component={Setting} />\n          <Route exact path='/' render={() => <FrontPage />} />\n          <Route path='/login' render={(history) => <div>\n            <LoginForm history={history} />\n          </div>} />\n          <Route path='/register' render={(history) => <div>\n            <RegisterForm history={history} />\n          </div>} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  initUser\n}\n\nApp.propTypes = {\n  initUser: PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport jwtDecode from 'jwt-decode'\nimport userReducer, { lsKey, logout }from './reducers/userReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nconst reducer = combineReducers({\n  user: userReducer,\n  notification: notificationReducer,\n  blog: blogReducer\n})\n\nconst checkTokenExpirationMiddleware = store => next => action => {\n  const token =\n    localStorage.getItem(lsKey) &&\n    JSON.parse(localStorage.getItem(lsKey)) &&\n    JSON.parse(localStorage.getItem(lsKey))['token']\n  if (token && jwtDecode(token).exp < Date.now() / 1000) {\n    store.dispatch(logout())\n    window.alert('Your session expired, please login again')\n  }\n  next(action)\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk, checkTokenExpirationMiddleware)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}