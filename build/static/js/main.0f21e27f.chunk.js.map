{"version":3,"sources":["hooks/useField.js","services/user.js","services/blogs.js","reducers/userReducer.js","reducers/notificationReducer.js","components/LoginForm.js","components/ValidateInput.js","components/RedirectToMain.js","components/RegisterForm.js","hooks/useDebounce.js","components/Notification.js","components/Blogs.js","components/ProtectedRoute.js","components/NotFoundPage.js","App.js","store.js","index.js"],"names":["useField","type","useState","value","setValue","onChange","e","target","checkUserNameExisted","userName","a","axios","post","res","data","register","newUser","login","user","newToken","lsKey","initialState","userNameExisted","userReducer","state","action","loggedInUser","setNotification","message","error","content","dispatch","setTimeout","notificationReducer","mapDispatchToProps","userService","window","localStorage","setItem","JSON","stringify","blogService","token","withRouter","connect","props","password","loginButtonDisabled","length","handleSubmit","preventDefault","from","location","pathname","className","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","required","Button","disabled","Message","ValidateInput","fieldName","input","minLength","maxLength","extraRequirement","extraErrorMessage","RedirectToMain","position","top","left","transform","userInfo","registerSuccess","setRegisterSuccess","passwordConfirm","debouncedUsername","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","useDebounce","existedUserName","submitButtonDisabled","Label","notification","Transition","visible","animation","duration","right","zIndex","floating","Blogs","isAuthenticated","Component","component","rest","render","NotFoundPage","initUser","loggedInUserJson","getItem","parse","console","log","path","history","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0f21e27f.chunk.js","sourcesContent":["import { useState } from 'react'\n\nexport const useField = type => {\n  const [value, setValue] = useState('')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange\n  }\n}","import axios from 'axios'\nconst baseUrl = '/api/user'\n\n// res.data = ctx.body of backend\n\nconst checkUserNameExisted = async userName => {\n  const res = await axios.post(`${baseUrl}/isExist`, { userName })\n  return res.data\n}\n\nconst register = async newUser => {\n  const res = await axios.post(`${baseUrl}/register`, newUser)\n  return res.data\n}\n\nconst login = async user => {\n  const res = await axios.post(`${baseUrl}/login`, user)\n  return res.data\n}\n\nexport default {\n  checkUserNameExisted,\n  register,\n  login\n}\n\n","// import axios from 'axios'\n// const baseUrl = '/api/blogs'\n\nlet token = null\n\nconst getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst destroyToken = () => {\n  token = null\n}\n\nexport default { getConfig, setToken, destroyToken }","import userService from '../services/user'\nimport blogService from '../services/blogs'\n\nexport const lsKey = 'loggedInUser'\n\nexport const initialState = {\n  userNameExisted: false\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'REGISTER':\n    return initialState\n  case 'USERNAME_EXISTED':\n    return { userNameExisted: action.userNameExisted }\n  case 'SET_USER':\n    return action.loggedInUser\n  case 'CLEAR_USER':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedInUserJson = window.localStorage.getItem(lsKey)\n    if (loggedInUserJson) {\n      const loggedInUser = JSON.parse(loggedInUserJson)\n      dispatch({\n        type: 'SET_USER',\n        loggedInUser\n      })\n    }\n  }\n}\n\nexport const checkUserNameExisted = userName => {\n  return async dispatch => {\n    const userInfo = await userService.checkUserNameExisted(userName)\n    const userNameExisted = userInfo.data ? true : false\n    dispatch({\n      type: 'USERNAME_EXISTED',\n      userNameExisted\n    })\n  }\n}\n\nexport const register = newUser => {\n  return async dispatch => {\n    await userService.register(newUser)\n    dispatch({\n      type: 'REGISTER'\n    })\n  }\n}\n\nexport const login = user => {\n  return async dispatch => {\n    const res = await userService.login(user)\n    const loggedInUser = res.data\n    window.localStorage.setItem(lsKey, JSON.stringify(loggedInUser))\n    blogService.setToken(loggedInUser.token)\n    dispatch({\n      type: 'SET_USER',\n      loggedInUser\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    blogService.destroyToken()\n    window.localStorage.removeItem(lsKey)\n    dispatch({\n      type: 'CLEAR_USER'\n    })\n  }\n}\nexport default userReducer\n\n","const notificationReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return {}\n  default:\n    return state\n  }\n}\n\nexport const setNotification = ({ message, error = false }) => {\n  const content = {\n    message,\n    error\n  }\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","/**\n * @description login form\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport { useField } from '../hooks/useField'\nimport { login } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst LoginForm = props => {\n  const userName = useField('text')\n  const password = useField('password')\n\n  const loginButtonDisabled = userName.value.length === 0 || password.value.length === 0\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const user = {\n      userName: userName.value,\n      password: password.value\n    }\n    try {\n      await props.login(user)\n    } catch (e) {\n      props.setNotification({ message: 'Login failed, wrong username or password', error: true })\n    }\n  }\n\n  const { from } = props.location.state || { from: { pathname: '/home' } }\n  if (props.user.token) {\n    props.setNotification({ message: 'You have logged in', error: false })\n    return (\n      <div className='redirect'>\n        <Redirect to={from} />\n      </div>\n\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Log in to your account\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input className='userName' fluid icon='user' iconPosition='left' placeholder='User Name' {...userName} required />\n              <Form.Input\n                className='pwd'\n                fluid\n                icon='lock'\n                placeholder='Password'\n                {...password}\n                required\n              />\n              <Button type='submit' color='teal' fluid size='large' disabled={loginButtonDisabled}>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to='/register'>Sign Up</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  setNotification\n}\n\nLoginForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LoginForm)\n)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ValidateInput = props => {\n  const { fieldName, input, minLength, maxLength, extraRequirement, extraErrorMessage } = props\n  if (!input) {\n    return null\n  }\n  if ((minLength && maxLength) && (input.length < minLength || input.length > maxLength)) {\n    return (\n      <p style={{ color: 'red' }}>\n        {fieldName} should be between {minLength} and {maxLength} characters\n      </p>\n    )\n  }\n  if (extraRequirement === false) {\n    return (\n      <p style={{ color: 'red' }}>\n        {extraErrorMessage}\n      </p>\n    )\n  }\n  return (\n    <p style={{ color: 'green' }}>\n      Valid {fieldName}\n    </p>\n  )\n}\n\nValidateInput.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  extraRequirement: PropTypes.bool,\n  extraErrorMessage: PropTypes.string\n}\n\nexport default ValidateInput","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst RedirectToMain = () => {\n  return (\n    <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}>\n      <h3>You have already logged in, please go to the\n        <Link to='/home'> main page</Link> directly</h3>\n    </div>\n  )\n}\n\nexport default RedirectToMain","/**\n * @description register form\n */\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Label, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { checkUserNameExisted, register } from '../reducers/userReducer'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ValidateInput from './ValidateInput'\nimport RedirectToMain from './RedirectToMain'\n\nconst RegisterForm = props => {\n  const [registerSuccess, setRegisterSuccess] = useState(false)\n  const userName = useField('text')\n  const password = useField('password')\n  const passwordConfirm = useField('password')\n  const debouncedUsername = useDebounce(userName.value, 500)\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const submitButtonDisabled = props.user.userNameExisted || userName.value.length < 3 || userName.value.length > 255 || password.value.length < 3 || password.value.length > 255 || password.value !== passwordConfirm.value\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const newUser = {\n      userName: userName.value,\n      password: passwordConfirm.value\n    }\n    try {\n      await props.register(newUser)\n      setRegisterSuccess(true)\n      //props.history.push('/login')\n      props.setNotification({ message: 'Register succeeded, please log in', error: false })\n    } catch (e) {\n      props.setNotification({ message: 'Register failed', error: true })\n    }\n\n  }\n\n  if (registerSuccess) {\n    return (\n      <div className='redirect'>\n        <Redirect to='/login' />\n      </div>\n    )\n  }\n\n  if (props.user.token) {\n    return (\n      <RedirectToMain />\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Sign Up\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input className='userName' fluid icon='user' iconPosition='left' placeholder='Username (between 3 and 255 characters)'\n                {...userName} required\n              />\n              <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n                extraRequirement={!props.user.userNameExisted} extraErrorMessage={'User name is already existed'} />\n              <Form.Input\n                className='pwd'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password (between 3 and 255 characters)'\n                {...password}\n                required\n              />\n              <ValidateInput fieldName={'Password'} input={password.value} minLength={3} maxLength={255} />\n              <Form.Input\n                className='pwdConfirm'\n                fluid\n                placeholder='Confirm Your Password'\n                {...passwordConfirm}\n                required\n              />\n              <ValidateInput fieldName={'Password confirmation'} input={passwordConfirm.value}\n                extraRequirement={password.value === passwordConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n              <Label>Upload Your Head Portrait</Label>\n              <Form.Input type='file' />\n              <Button color='teal' fluid size='large' disabled={submitButtonDisabled}>\n                Sign Up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>Already have an account? <Link to='/login'>Back to login</Link></Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  register,\n  setNotification\n}\n\nRegisterForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  checkUserNameExisted: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegisterForm)\n)\n","/**\n * @description Simple debounce so that the api won't be called rapidly\n */\nimport { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      return () => {\n        clearTimeout(handler)\n      }\n    }, [value, delay]\n  )\n\n  return debouncedValue\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Message, Transition } from 'semantic-ui-react'\n\nconst Notification = props => {\n  const { message, error } = props.notification\n\n  const style = {\n    position: 'fixed !important',\n    top: '32px',\n    right: '0',\n    left: '0',\n    textAlign: 'center',\n    zIndex: '10000'\n  }\n\n  if(!message) return null\n\n  return (\n    <Transition visible={!!message} animation='fly down' duration={250}>\n      <div style={style}>\n        {!error ? (\n          <Message floating color='green' size='large'>\n            {message}\n          </Message>\n        ) : (\n          <Message floating color='red' size='large'>\n            {message}\n          </Message>\n        )}\n      </div>\n\n\n    </Transition>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  }\n}\n\nNotification.propTypes = {\n  notification: PropTypes.object.isRequired\n}\n\nexport default connect(\n  mapStateToProps\n)(Notification)","import React from 'react'\n\nconst Blogs = () => {\n  return (\n    <div>Welcom to microblog</div>\n  )\n}\n\nexport default Blogs","import React from 'react'\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst ProtectedRoute = props => {\n  const isAuthenticated = props.user.token ? true : false\n  const { component: Component, ...rest } = props\n\n  return (\n    <Route {...rest} render={(props) => (\n      isAuthenticated\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\n// const mapDispatchToProps = {\n//   initUser\n// }\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object.isRequired,\n  component: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    //mapDispatchToProps\n  )(ProtectedRoute)\n)","import React from 'react'\n\nconst NotFoundPage = () => {\n  return <div>The page cannot be found...</div>\n}\n\nexport default NotFoundPage","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport Notification from './components/Notification'\nimport { initUser } from './reducers/userReducer'\nimport Blogs from './components/Blogs'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFoundPage from './components/NotFoundPage'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    console.log('init')\n    props.initUser()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Notification />\n      <Router>\n        <Switch>\n          <ProtectedRoute path='/home' component={Blogs} />\n          <Route path='/login' render={(history) => <div>\n            <LoginForm history={history} />\n          </div>} />\n          <Route path='/register' render={(history) => <div>\n            <RegisterForm history={history} />\n          </div>} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  initUser\n}\n\nApp.propTypes = {\n  initUser: PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport userReducer from './reducers/userReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  user: userReducer,\n  notification: notificationReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}