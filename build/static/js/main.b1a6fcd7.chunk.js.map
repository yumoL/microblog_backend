{"version":3,"sources":["hooks/useField.js","services/utils.js","services/user.js","reducers/userReducer.js","reducers/notificationReducer.js","components/LoginForm.js","hooks/useDebounce.js","components/ValidateInput.js","components/RedirectToMain.js","components/RegisterForm.js","components/Notification.js","components/blogPage/Images/SingleImage.js","components/blogPage/BlogInput.js","services/blogs.js","reducers/blogReducer.js","components/HomePage.js","components/ProtectedRoute.js","components/NotFoundPage.js","components/Navbar.js","components/Setting.js","reducers/usersReducer.js","components/blogPage/Images/Images.js","components/blogPage/Blog.js","components/blogPage/BlogList.js","components/blogPage/PageDivider.js","components/Profile.js","components/FrontPage.js","App.js","store.js","index.js"],"names":["useField","type","defaultedValue","useState","value","setValue","onChange","e","target","clear","token","getConfig","headers","Authorization","uploadFile","formData","a","axios","post","res","console","log","data","setToken","newToken","destroyToken","checkUserNameExisted","userName","getUserInfo","id","get","register","newUser","login","user","changeBasicInfo","userToUpdate","patch","changePwd","lsKey","initialState","userNameExisted","storeUserToLocalStorage","window","localStorage","setItem","JSON","stringify","utilService","dispatch","userService","userInfo","logout","removeItem","userReducer","state","action","loggedInUser","updatedUser","setNotification","message","error","timeout","content","setTimeout","notificationReducer","mapDispatchToProps","withRouter","connect","props","password","loginButtonDisabled","length","handleSubmit","preventDefault","from","location","pathname","className","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","required","Button","disabled","Message","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","ValidateInput","fieldName","input","minLength","maxLength","extraRequirement","extraErrorMessage","RedirectToMain","position","top","left","transform","file","registerSuccess","setRegisterSuccess","passwordConfirm","debouncedUsername","existedUserName","submitButtonDisabled","notification","Transition","visible","animation","duration","right","zIndex","floating","SingleImage","image","toUpload","removeImage","Modal","key","trigger","Image","src","Content","wrapped","Icon","name","onClick","BlogInput","files","setFiles","tempUrls","setTempUrls","setId","FormData","map","append","fileContent","createBlog","userId","imageInput","React","createRef","Field","TextArea","minHeight","current","click","accept","ref","fileToAdd","tempUrl","urlContent","URL","createObjectURL","width","Row","columns","url","filter","find","newBlog","getBlogsByUser","pageIndex","allNumber","blogList","blogReducer","concat","uploadedPic","urls","blogService","publishedBlog","blog","isAuthenticated","Component","component","rest","render","NotFoundPage","onLogin","onRegister","onHome","onProfile","includes","onDiscover","Menu","tabular","Item","active","Link","Dropdown","item","text","newUserName","uploadedUrl","newPicture","pwd","newPwd","oldPwd","newPwdConfirm","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","handleBasicInfoChange","handlePwdChange","disableChangeBasicInfoButton","disableChangePwdButton","picture","usersReducer","checkedUser","Images","images","Blog","imagesArray","Comment","Avatar","marginGight","Author","Metadata","createdAt","Text","BlogList","Group","PageDivider","noMore","setPageIndex","Divider","horizontal","clearBlogList","users","isMe","getBlogs","getAnotherUserInfo","float","marginRight","display","compact","initUser","loggedInUserJson","getItem","parse","path","HomePage","match","params","Number","Setting","exact","history","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","jwtDecode","exp","Date","now","alert","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b1a6fcd7.chunk.js","sourcesContent":["import { useState } from 'react'\n\nexport const useField = (type, defaultedValue) => {\n  const [value, setValue] = useState(defaultedValue ? defaultedValue : '')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const clear = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    clear\n  }\n}","import axios from 'axios'\nconst baseUrl = '/api/utils'\n\nlet token = null\n\nexport const getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst destroyToken = () => {\n  token = null\n}\n\nconst uploadFile = async formData => {\n  const res = await axios.post(`${baseUrl}/upload`, formData, getConfig())\n  console.log('return', res.data)\n  return res.data\n}\n\nexport default {\n  uploadFile,\n  setToken,\n  destroyToken\n}","import axios from 'axios'\nimport { getConfig } from '../services/utils'\nconst baseUrl = '/api/user'\n\n// res.data = ctx.body of backend\n\nconst checkUserNameExisted = async userName => {\n  const res = await axios.post(`${baseUrl}/isExist`, { userName })\n  return res.data\n}\n\nconst getUserInfo = async id => {\n  const res = await axios.get(`${baseUrl}/${id}`, getConfig())\n  return res.data\n}\n\nconst register = async newUser => {\n  const res = await axios.post(`${baseUrl}/register`, newUser)\n  return res.data\n}\n\nconst login = async user => {\n  const res = await axios.post(`${baseUrl}/login`, user)\n  return res.data\n}\n\nconst changeBasicInfo = async (id, userToUpdate) => {\n  const res = await axios.patch(`${baseUrl}/changeInfo/${id}`, userToUpdate, getConfig())\n  return res.data\n}\n\nconst changePwd = async (id, userToUpdate) => {\n  const res =await axios.patch(`${baseUrl}/changePwd/${id}`, userToUpdate, getConfig())\n  return res.data\n}\n\nexport default {\n  checkUserNameExisted,\n  register,\n  login,\n  changeBasicInfo,\n  changePwd,\n  getUserInfo\n}\n\n","import userService from '../services/user'\nimport utilService from '../services/utils'\n\nexport const lsKey = 'loggedInUser'\n\nexport const initialState = {\n  userNameExisted: false\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'REGISTER':\n    return initialState\n  case 'USERNAME_EXISTED':\n    return { ...state, userNameExisted: action.userNameExisted }\n  case 'SET_USER':\n    return action.loggedInUser\n  case 'CLEAR_USER':\n    return initialState\n  case 'UPDATE_USER_INFO':\n    return action.updatedUser\n  default:\n    return state\n  }\n}\n\nconst storeUserToLocalStorage = user => {\n  window.localStorage.setItem(lsKey, JSON.stringify(user))\n  utilService.setToken(user.token)\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedInUserJson = window.localStorage.getItem(lsKey)\n    if (loggedInUserJson) {\n      const loggedInUser = JSON.parse(loggedInUserJson)\n      utilService.setToken(loggedInUser.token)\n      dispatch({\n        type: 'SET_USER',\n        loggedInUser\n      })\n    }\n  }\n}\n\nexport const checkUserNameExisted = userName => {\n  return async dispatch => {\n    const userInfo = await userService.checkUserNameExisted(userName)\n    const userNameExisted = userInfo.data ? true : false\n    dispatch({\n      type: 'USERNAME_EXISTED',\n      userNameExisted\n    })\n  }\n}\n\nexport const register = newUser => {\n  return async dispatch => {\n    await userService.register(newUser)\n    dispatch({\n      type: 'REGISTER'\n    })\n  }\n}\n\nexport const login = user => {\n  return async dispatch => {\n    const res = await userService.login(user)\n    const loggedInUser = res.data\n    storeUserToLocalStorage(loggedInUser)\n    dispatch({\n      type: 'SET_USER',\n      loggedInUser\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    utilService.destroyToken()\n    window.localStorage.removeItem(lsKey)\n    dispatch({\n      type: 'CLEAR_USER'\n    })\n  }\n}\n\nexport const changeBasicInfo = (id, newUserName, formData) => {\n  return async dispatch => {\n    let userToUpdate = {\n      newUserName\n    }\n    if(formData !== null){\n      // upload picture and get the saved picture url from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: [url]\n     * }\n     */\n      const uploadedUrl = uploadedPic.data[0] //the first element of data array as we only have one picture here\n      console.log('suc model', uploadedPic.data[0])\n      userToUpdate = {\n        ...userToUpdate,\n        newPicture: uploadedUrl\n      }\n    }\n\n    const res = await userService.changeBasicInfo(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\n\nexport const changePwd = (id, pwd, newPwd) => {\n  return async dispatch => {\n    const userToUpdate = {\n      pwd,\n      newPwd\n    }\n    const res = await userService.changePwd(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\nexport default userReducer\n\n","const notificationReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return {}\n  default:\n    return state\n  }\n}\n\nexport const setNotification = ({ message, error = false, timeout=5000 }) => {\n  const content = {\n    message,\n    error\n  }\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, timeout)\n  }\n}\n\nexport default notificationReducer","/**\n * @description login form\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport { useField } from '../hooks/useField'\nimport { login } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst LoginForm = props => {\n  const userName = useField('text')\n  const password = useField('password')\n\n  const loginButtonDisabled = userName.value.length === 0 || password.value.length === 0\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const user = {\n      userName: userName.value,\n      password: password.value\n    }\n    try {\n      await props.login(user)\n    } catch (e) {\n      props.setNotification({ message: 'Login failed, wrong username or password', error: true })\n    }\n  }\n\n  const { from } = props.location.state || { from: { pathname: '/home' } }\n  if (props.user.token) {\n    props.setNotification({ message: 'You have logged in', error: false })\n    return (\n      <div className='redirect'>\n        <Redirect to={from} />\n      </div>\n\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header id='loginHeader' as='h2' color='teal' textAlign='center'>\n            Log in to your account\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input id='userName' fluid icon='user' iconPosition='left' placeholder='User Name' {...userName} required />\n              <Form.Input\n                id='pwd'\n                fluid\n                icon='lock'\n                placeholder='Password'\n                {...password}\n                required\n              />\n              <Button id='loginButton' type='submit' color='teal' fluid size='large' disabled={loginButtonDisabled}>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to='/register'>Sign Up</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  setNotification\n}\n\nLoginForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LoginForm)\n)","/**\n * @description Simple debounce so that the api won't be called rapidly\n */\nimport { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      return () => {\n        clearTimeout(handler)\n      }\n    }, [value, delay]\n  )\n\n  return debouncedValue\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ValidateInput = props => {\n  const { fieldName, input, minLength, maxLength, extraRequirement, extraErrorMessage } = props\n  if (!input) {\n    return null\n  }\n  if ((minLength && maxLength) && (input.length < minLength || input.length > maxLength)) {\n    return (\n      <p style={{ color: 'red' }}>\n        {fieldName} should be between {minLength} and {maxLength} characters\n      </p>\n    )\n  }\n  if (extraRequirement === false) {\n    return (\n      <p style={{ color: 'red' }}>\n        {extraErrorMessage}\n      </p>\n    )\n  }\n  return (\n    <p style={{ color: 'green' }}>\n      Valid {fieldName}\n    </p>\n  )\n}\n\nValidateInput.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  extraRequirement: PropTypes.bool,\n  extraErrorMessage: PropTypes.string\n}\n\nexport default ValidateInput","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst RedirectToMain = () => {\n  return (\n    <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}>\n      <h3>You have already logged in, please go to the\n        <Link to='/home'> main page</Link> directly</h3>\n    </div>\n  )\n}\n\nexport default RedirectToMain","/**\n * @description register form\n */\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { checkUserNameExisted, register } from '../reducers/userReducer'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ValidateInput from './ValidateInput'\nimport RedirectToMain from './RedirectToMain'\n\n\nconst RegisterForm = props => {\n  const [registerSuccess, setRegisterSuccess] = useState(false)\n  const userName = useField('text')\n  const password = useField('password')\n  const passwordConfirm = useField('password')\n  const debouncedUsername = useDebounce(userName.value, 500)\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const submitButtonDisabled = props.user.userNameExisted || userName.value.length < 3 || userName.value.length > 255 || password.value.length < 3 || password.value.length > 255 || password.value !== passwordConfirm.value\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const newUser = {\n      userName: userName.value,\n      password: passwordConfirm.value\n    }\n    try {\n      await props.register(newUser)\n      setRegisterSuccess(true)\n      //props.history.push('/login')\n      props.setNotification({ message: 'Register succeeded, please log in', error: false })\n    } catch (e) {\n      props.setNotification({ message: 'Register failed', error: true })\n    }\n  }\n\n  if (registerSuccess) {\n    return (\n      <div className='redirect'>\n        <Redirect to='/login' />\n      </div>\n    )\n  }\n\n  if (props.user.token) {\n    return (\n      <RedirectToMain />\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header id='signUp' as='h2' color='teal' textAlign='center'>\n            Sign Up\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input id='userName' fluid icon='user' iconPosition='left' placeholder='Username (between 3 and 255 characters)'\n                {...userName} required\n              />\n              <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n                extraRequirement={!props.user.userNameExisted} extraErrorMessage={'User name is already existed'} />\n              <Form.Input\n                id='pwd'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password (between 3 and 255 characters)'\n                {...password}\n                required\n              />\n              <ValidateInput fieldName={'Password'} input={password.value} minLength={3} maxLength={255} />\n              <Form.Input\n                id='pwdConfirm'\n                fluid\n                placeholder='Confirm Your Password'\n                {...passwordConfirm}\n                required\n              />\n              <ValidateInput fieldName={'Password confirmation'} input={passwordConfirm.value}\n                extraRequirement={password.value === passwordConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n              <Button id='register' color='teal' fluid size='large' disabled={submitButtonDisabled}>\n                Sign Up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>Already have an account? <Link to='/login'>Back to login</Link></Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    file: state.file\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  register,\n  setNotification\n}\n\nRegisterForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  checkUserNameExisted: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegisterForm)\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Message, Transition } from 'semantic-ui-react'\n\nconst Notification = props => {\n  const { message, error } = props.notification\n\n  const style = {\n    position: 'fixed !important',\n    top: '32px',\n    right: '0',\n    left: '0',\n    textAlign: 'center',\n    zIndex: '10000'\n  }\n\n  if(!message) return null\n\n  return (\n    <Transition visible={!!message} animation='fly down' duration={250}>\n      <div style={style}>\n        {!error ? (\n          <Message floating color='green' size='large'>\n            {message}\n          </Message>\n        ) : (\n          <Message floating color='red' size='large'>\n            {message}\n          </Message>\n        )}\n      </div>\n\n\n    </Transition>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  }\n}\n\nNotification.propTypes = {\n  notification: PropTypes.object.isRequired\n}\n\nexport default connect(\n  mapStateToProps\n)(Notification)","import React from 'react'\nimport { Image, Modal, Icon } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nconst SingleImage = ({ image, toUpload, removeImage }) => {\n  if(!image)return null\n\n  return(\n    <div id='image'>\n      <Modal key={image} trigger={<Image src={image} size=\"medium\" />}>\n        <Modal.Content image>\n          <Image wrapped src={image} />\n        </Modal.Content>\n      </Modal>\n      {toUpload&&(<Icon name=\"delete\" onClick={removeImage}/>)}\n    </div>\n  )\n}\n\nSingleImage.propTypes = {\n  image: PropTypes.string,\n  toUpload: PropTypes.bool,\n  removeImage: PropTypes.func\n}\nexport default SingleImage","import React, { useState } from 'react'\nimport { Form, TextArea, Button, Icon, Grid } from 'semantic-ui-react'\nimport { useField } from '../../hooks/useField'\nimport PropTypes from 'prop-types'\nimport SingleImage from './Images/SingleImage'\n\nconst BlogInput = props => {\n  const [files, setFiles ] = useState([])\n  const [tempUrls, setTempUrls ] = useState([])\n  const content = useField('text')\n  const [id, setId] = useState(0)\n\n  const handleFileChange = e => {\n    if(files.length===3){\n      props.setNotification({ message:'You can upload max 3 images', error:true })\n      return\n    }\n    setId(id+1)\n    const fileToAdd = {\n      fileContent: e.target.files[0],\n      id\n    }\n    const tempUrl = {\n      urlContent: URL.createObjectURL(fileToAdd.fileContent),\n      id\n    }\n    setFiles([...files, fileToAdd])\n    setTempUrls([...tempUrls, tempUrl])\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    let formData = null\n    if(files.length > 0){\n      formData = new FormData()\n      files.map(file => formData.append('file',file.fileContent))\n    }\n    await props.createBlog(props.userId, content.value, formData )\n    setFiles([])\n    setTempUrls([])\n    setId(0)\n    content.clear()\n    props.setNotification({ message:'You created a blog', error: false })\n  }\n  let imageInput = React.createRef()\n  const insertImageButtonOnClick = () => {\n    imageInput.current.click()\n  }\n\n  const removeImage = id => {\n    setFiles(files.filter(file => file.id!==id))\n    setTempUrls(tempUrls.filter(url => url.id!==id))\n  }\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <TextArea id='blogTextField' placeholder='new blog...' {...content} style={{ minHeight: 100 }} clear='clear'/>\n          <Button id='insertImageButton' type='button' onClick={insertImageButtonOnClick}><Icon name='picture'/>insert an image (max 3)</Button>\n          <input id='fileInput' type='file' accept='image/*' ref={imageInput} onChange={handleFileChange} style={{ 'display':'none' }}/>\n        </Form.Field>\n        {files.length>0&&<Grid style={{ height:'33%', width:'33%' }}>\n          {<Grid.Row columns={3} >\n            {tempUrls.map(url => <Grid.Column key={url.id}>\n              <SingleImage image={url.urlContent} toUpload={true}\n                removeImage={() => removeImage(tempUrls.find(tempUrl => tempUrl.urlContent===url.urlContent).id)}/>\n            </Grid.Column>)}\n          </Grid.Row>}\n        </Grid>}\n        <Button id='publishBlogButton' color='green'>Publish your microblog</Button>\n      </Form>\n    </div>\n  )\n}\n\nBlogInput.propTypes = {\n  userId: PropTypes.number.isRequired,\n  createBlog: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n}\n\nexport default BlogInput","import axios from 'axios'\nimport { getConfig } from './utils'\nconst baseUrl = '/api/blog'\n\nconst createBlog = async (userId, newBlog ) => {\n  const res = await axios.post(`${baseUrl}/create/${userId}`, newBlog, getConfig())\n  return res.data\n}\n\nconst getBlogsByUser = async (userId, pageIndex=0) => {\n  const res = await axios.get(`${baseUrl}/profile/${userId}/${pageIndex}`, getConfig())\n  return res.data\n}\n\nexport default { createBlog, getBlogsByUser }","import blogService from '../services/blogs'\nimport utilService from '../services/utils'\n\nconst initialState = {\n  allNumber: 0,\n  blogList: []\n}\n\nconst blogReducer = (state=initialState, action) => {\n  switch (action.type) {\n  case 'CREATE_BLOG':\n    return state\n    //return { ...state, allNumber:state.allNumber+1,blogList:state.blogList.concat(action.publishedBlog) }\n  case 'GET_BLOGS_BY_USER':\n    return { ...state, allNumber:action.allNumber,blogList:state.blogList.concat(action.blogList) }\n  case 'CLEAR_USER':\n    return initialState\n  case 'CLEAR_BLOG_LIST':\n    return initialState\n  default:\n    return state\n  }\n}\n\nexport const createBlog = (userId, content, formData) => {\n  return async dispatch => {\n    let newBlog = {\n      content\n    }\n\n    if(formData !== null){\n      // upload picture and get the urls of saved pictures from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: [url]\n     * }\n     */\n      const urls = uploadedPic.data\n      newBlog = {\n        ...newBlog,\n        urls\n      }\n    }\n    const res = await blogService.createBlog(userId, newBlog)\n    const publishedBlog = res.data\n    dispatch({\n      type: 'CREATE_BLOG',\n      publishedBlog\n    })\n  }\n}\n\nexport const getBlogsByUser = (userId, pageIndex) => {\n  return async dispatch => {\n    const res = await blogService.getBlogsByUser(userId, pageIndex)\n    const blogList = res.data.blogList\n    console.log('blogList', blogList)\n    dispatch({\n      type: 'GET_BLOGS_BY_USER',\n      allNumber: res.data.allNumber,\n      blogList: res.data.blogList\n    })\n  }\n}\n\nexport const clearBlogList = () => {\n  return dispatch => {\n    dispatch({\n      type:'CLEAR_BLOG_LIST'\n    })\n  }\n}\nexport default blogReducer","import React from 'react'\nimport BlogInput from './blogPage/BlogInput'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\n/**\n * Create new blogs, show user's blogs and blogs of people the user follows\n */\nconst HomePage = props => {\n  return (\n    <div>\n      <BlogInput userId={props.user.id} createBlog={props.createBlog} setNotification={props.setNotification}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    blog: state.blog\n  }\n}\n\nconst mapDispatchToProps = {\n  createBlog,\n  setNotification\n}\n\nHomePage.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(HomePage)\n","import React from 'react'\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst ProtectedRoute = props => {\n  const isAuthenticated = props.user.token ? true : false\n  const { component: Component, ...rest } = props\n\n  return (\n    <Route {...rest} render={(props) => (\n      isAuthenticated\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object.isRequired,\n  component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n  )(ProtectedRoute)\n)","import React from 'react'\n\nconst NotFoundPage = () => {\n  return <div>The page cannot be found...</div>\n}\n\nexport default NotFoundPage","/* eslint-disable eqeqeq */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown, Button } from 'semantic-ui-react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { logout } from '../reducers/userReducer'\n\nconst Navbar = props => {\n  const onLogin = props.location.pathname == '/login'\n  const onRegister = props.location.pathname == '/register'\n  const onHome = props.location.pathname == '/home'\n  const onProfile = props.location.pathname.includes('/profile')\n  const onDiscover = props.location.pathname == '/discover'\n\n\n  if(!props.user.token) {\n    return (\n      <Menu tabular>\n        <Menu.Item\n          id='loginMenu'\n          name='Login'\n          active={onLogin}\n          as={Link}\n          to='/login'/>\n        <Menu.Item\n          id='registerMenu'\n          name='Register'\n          active={onRegister}\n          as={Link}\n          to='/register'/>\n      </Menu>\n    )\n  }\n  return (\n    <Menu tabular>\n      <Menu.Item\n        id='homeMenu'\n        name='Home'\n        active={onHome}\n        as={Link}\n        to='/home'/>\n      <Menu.Item\n        id='profileMenu'\n        name='Profile'\n        active={onProfile}\n        as={Link}\n        to={`/profile/${props.user.id}/0`}/>\n      <Menu.Item\n        name='Discover'\n        active={onDiscover}\n        as={Link}\n        to='/discover'/>\n      <Menu.Menu\n        position='right'\n      >\n        <Dropdown id='settingDropdown' item text='Setting'>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              id='accountSettingItem'\n              as={Link} to='/setting'>\n              Account setting\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <Button id='logoutButton' onClick={props.logout}><Link to='/login'>Logout</Link></Button>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  logout\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar))\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Form, Grid, Header, Button, Image } from 'semantic-ui-react'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport ValidateInput from './ValidateInput'\nimport { checkUserNameExisted, changeBasicInfo, changePwd } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Setting = props => {\n  const userName = useField('text', props.user.userName)\n  const debouncedUsername = useDebounce(userName.value, 500)\n  const oldPwd = useField('password')\n  const newPwd = useField('password')\n  const newPwdConfirm = useField('password')\n\n  const [selectedFile, setSelectedFile]=useState(null)\n  const [previewUrl, setPreviewUrl ] = useState('')\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const handleBasicInfoChange = async e => {\n    e.preventDefault()\n    let formData = null\n    if(selectedFile !== null){\n      formData = new FormData()\n      formData.append('file', selectedFile)\n    }\n    try{\n      await props.changeBasicInfo(props.user.id, userName.value, formData )\n      props.setNotification({ message: 'You have changed your basic information', error: false })\n    } catch (e){\n      props.setNotification( { message:'Fail to change basic information', error: true })\n    }\n  }\n\n  const handleFileChange = e => {\n    const file = e.target.files[0]\n    setSelectedFile(file)\n    setPreviewUrl(URL.createObjectURL(file))\n  }\n\n  const handlePwdChange = async e => {\n    e.preventDefault()\n    try{\n      await props.changePwd(props.user.id, oldPwd.value, newPwd.value)\n      props.setNotification({ message: 'You have changed your password', error: false })\n    }catch (e){\n      props.setNotification( { message:'Fail to change password, please make sure that your old password is correct', error: true })\n    }\n    oldPwd.clear()\n    newPwd.clear()\n    newPwdConfirm.clear()\n  }\n\n  const disableChangeBasicInfoButton = (props.user.userNameExisted && userName.value !== props.user.userName) ||\n                                        userName.value.length < 3 || userName.value.length > 255\n  const disableChangePwdButton = newPwd.value.length <3 || newPwd.value.length>255 || newPwd.value!==newPwdConfirm.value\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n        Account Setting\n        </Header>\n        <Header as='h3' color='teal' textAlign='center'>\n        Basic information\n        </Header>\n        <Form onSubmit={handleBasicInfoChange}>\n          <Form.Field>\n            <label>User name</label>\n            <input id='newUserNameField' {...userName} clear='clear'/>\n            <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n              extraRequirement={!props.user.userNameExisted || userName.value===props.user.userName} extraErrorMessage={'User name is already existed'} />\n          </Form.Field>\n          <Form.Field>\n            <label>Change head portrait</label>\n            <Form.Input type='file' accept='image/*' onChange={handleFileChange} />\n            <Image src={previewUrl!=='' ? previewUrl : props.user.picture} size='small' />\n          </Form.Field>\n          <Button id='saveBIChangeButton' color='teal' fluid size='large' disabled={disableChangeBasicInfoButton}>\n            Save basic information changes\n          </Button>\n        </Form>\n        <Header as='h3' color='teal' textAlign='center'>\n            Password\n        </Header>\n        <Form onSubmit={handlePwdChange}>\n          <Form.Field>\n            <label>Current password</label>\n            <input id='oldPwdField' placeholder='current password' {...oldPwd} clear='clear'/>\n          </Form.Field>\n\n          <Form.Field>\n            <label>New password</label>\n            <input id='newPwdField' placeholder='new password' {...newPwd} clear='clear' />\n            <ValidateInput fieldName={'Password'} input={newPwd.value} minLength={3} maxLength={255} />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm new password</label>\n            <input id='pwdConfirmField' placeholder='new password confirmation' {...newPwdConfirm} clear='clear'/>\n          </Form.Field>\n          <ValidateInput fieldName={'Password confirmation'} input={newPwdConfirm.value}\n            extraRequirement={newPwd.value === newPwdConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n          <Button id='pwdSaveButton' color='teal' fluid size='large' disabled={disableChangePwdButton}>\n            Save new password\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state  => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  changeBasicInfo,\n  changePwd,\n  setNotification\n}\n\nSetting.propTypes = {\n  checkUserNameExisted: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  changeBasicInfo: PropTypes.func.isRequired,\n  changePwd:PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Setting)","import userService from '../services/user'\n\nconst initialState = {}\n\nconst usersReducer = (state=initialState, action) => {\n  switch(action.type) {\n  case 'GET_USER_INFO':\n    return action.checkedUser\n  default:\n    return state\n  }\n\n}\n\nexport const getUserInfo = id => {\n  return async dispatch => {\n    const userInfo = await userService.getUserInfo(id)\n    dispatch({\n      type: 'GET_USER_INFO',\n      checkedUser: userInfo.data\n    })\n  }\n}\n\nexport default usersReducer","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\nimport SingleImage from './SingleImage'\n\nconst Images = props => {\n  return (\n    <div>\n      <Grid>\n        {<Grid.Row columns={3} >\n          {props.images.map(url => <Grid.Column key={url}>\n            <SingleImage image={url} />\n          </Grid.Column>)}\n        </Grid.Row>}\n      </Grid>\n    </div>\n  )\n}\n\nImages.propTypes = {\n  images: PropTypes.array.isRequired\n}\n\nexport default Images","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Comment } from 'semantic-ui-react'\nimport Images from './Images/Images'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog }) => {\n  const imagesArray = blog.images.map(image => image.url)\n  return (\n    <>\n      <Comment>\n        <Comment.Avatar src={blog.user.picture} style={{ marginGight: '0px' }}/>\n        <Comment.Author>\n          <Link to={`/profile/${blog.userId}/0`}>{blog.user.userName}</Link>\n        </Comment.Author>\n        <Comment.Content>\n          <Comment.Metadata>\n            <div>{blog.createdAt}</div>\n          </Comment.Metadata>\n          <Comment.Text>\n            {blog.content}\n            <Images images={imagesArray} />\n          </Comment.Text>\n        </Comment.Content>\n      </Comment>\n    </>\n  )\n}\nBlog.propTypes = {\n  blog: PropTypes.object\n}\n\nexport default Blog","import React from 'react'\nimport Blog from './Blog'\nimport { Comment } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nconst BlogList = props => {\n  return (\n    <div>\n      <Comment.Group>\n        {props.blogList.map(blog => (\n          <div key={blog.id}>\n            <Blog blog={blog}/>\n          </div>\n        ))}\n      </Comment.Group>\n    </div>\n\n  )\n}\nBlogList.propTypes = {\n  blogList: PropTypes.array\n}\nexport default BlogList","import React, { useState } from 'react'\nimport { Button, Divider } from 'semantic-ui-react'\n\nconst PageDivider = props => {\n  const { userId, getBlogsByUser, noMore } = props\n  const [pageIndex, setPageIndex ] = useState(1)\n\n  const handleLoadMore = () => {\n    console.log('more', pageIndex)\n    setPageIndex(pageIndex+1)\n    getBlogsByUser(userId, pageIndex)\n  }\n  if(noMore === true){\n    return (\n      <div>\n        <Divider horizontal>end</Divider>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Button id='loadMoreButton' color='blue' onClick={handleLoadMore}>\n      Click to load more\n      </Button>\n    </div>\n\n  )\n}\n\nexport default PageDivider","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { Divider, Segment } from 'semantic-ui-react'\nimport { getBlogsByUser, clearBlogList } from '../reducers/blogReducer'\nimport { getUserInfo } from '../reducers/usersReducer'\nimport BlogList from './blogPage/BlogList'\nimport { Image } from 'semantic-ui-react'\nimport PageDivider from './blogPage/PageDivider'\n\nconst Profile = (props) => {\n  const { userId, isMe } = props\n\n  const getBlogs = async() => {\n    await props.getBlogsByUser(userId, 0)\n  }\n\n  const getAnotherUserInfo = async() => {\n    await props.getUserInfo(userId)\n  }\n\n  useEffect(() => {\n    getBlogs()\n    getAnotherUserInfo()\n    return () => props.clearBlogList()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userId])\n\n  if(!props.blog.blogList)return null\n\n  return (\n    <div>\n      <div style={{ float:'left', width:'100%',marginRight:'-300px' }}>\n        {props.blog.blogList.length===0 ? (<div>\n        No blog\n          <Divider />\n        </div>):(\n          <BlogList blogList={props.blog.blogList}/>\n        ) }\n        <PageDivider noMore={props.blog.blogList.length===props.blog.allNumber} userId={props.users.id} getBlogsByUser={props.getBlogsByUser} />\n        {console.log('hmmmmmm', props.blog.blogList.length===props.blog.allNumber)}\n      </div>\n      <div style={{ float:'right' }}>\n        <div> <span>\n          <Image src={props.users.picture} verticalAlign='middle' size='tiny'/>\n          <h2 style={{ display:'inline' }}>{isMe ? <span>Me</span> : <span>{props.users.userName}</span>}</h2>\n        </span></div>\n        <Segment.Group compact>\n          {isMe && <Segment>\n            @Me ()\n          </Segment>}\n          <Segment>\n            <h3>Follower</h3>\n            <p>follower1</p>\n            <p>follower2</p>\n          </Segment>\n          <Segment>\n            <h3>Follow</h3>\n            <p>aaa</p>\n            <p>bbb</p>\n          </Segment>\n        </Segment.Group>\n      </div>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    blog: state.blog,\n    users: state.users\n  }\n}\n\nconst mapDispatchToProps = {\n  getBlogsByUser,\n  getUserInfo,\n  clearBlogList\n}\nProfile.propTypes = {\n  getBlogsByUser: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  blog: PropTypes.object,\n  userId: PropTypes.string.isRequired,\n  isMe: PropTypes.bool,\n  getUserInfo: PropTypes.func,\n  users: PropTypes.object,\n  clearBlogList: PropTypes.func.isRequired\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Profile)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\n\nconst FrontPage = props => {\n  if(props.user.token) {\n    return(\n      <Redirect to='/home' />\n    )\n  }\n  return (\n    <h1>Welcome to our Microblog Platform!</h1>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nFrontPage.propTypes = {\n  user: PropTypes.object\n}\n\nexport default connect(mapStateToProps)(FrontPage)","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport Notification from './components/Notification'\nimport { initUser } from './reducers/userReducer'\nimport HomePage from './components/HomePage'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFoundPage from './components/NotFoundPage'\nimport Navbar from './components/Navbar'\nimport Setting from './components/Setting'\nimport Profile from './components/Profile'\nimport FrontPage from './components/FrontPage'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    props.initUser()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"App\" style={{ textAlign:'left' }}>\n      <Notification />\n      <Router>\n        <Navbar />\n        <Switch>\n          <ProtectedRoute path='/home' component={HomePage} />\n          <ProtectedRoute path='/profile/:userId/:pageIndex'\n            component={({ match }) => <Profile userId={match.params.userId} isMe={props.user.id===Number(match.params.userId)}/>} />\n          <ProtectedRoute path='/setting' component={Setting} />\n          <Route exact path='/' render={() => <FrontPage />} />\n          <Route path='/login' render={(history) => <div>\n            <LoginForm history={history} />\n          </div>} />\n          <Route path='/register' render={(history) => <div>\n            <RegisterForm history={history} />\n          </div>} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  initUser\n}\n\nApp.propTypes = {\n  user: PropTypes.object,\n  initUser: PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport jwtDecode from 'jwt-decode'\nimport userReducer, { lsKey, logout }from './reducers/userReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  user: userReducer,\n  notification: notificationReducer,\n  blog: blogReducer,\n  users: usersReducer\n})\n\nconst checkTokenExpirationMiddleware = store => next => action => {\n  const token =\n    localStorage.getItem(lsKey) &&\n    JSON.parse(localStorage.getItem(lsKey)) &&\n    JSON.parse(localStorage.getItem(lsKey))['token']\n  if (token && jwtDecode(token).exp < Date.now() / 1000) {\n    store.dispatch(logout())\n    window.alert('Your session expired, please login again')\n  }\n  next(action)\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk, checkTokenExpirationMiddleware)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}