{"version":3,"sources":["hooks/useField.js","services/blogs.js","services/user.js","services/utils.js","reducers/userReducer.js","reducers/notificationReducer.js","components/LoginForm.js","hooks/useDebounce.js","components/ValidateInput.js","components/RedirectToMain.js","components/RegisterForm.js","reducers/fileReducer.js","components/Notification.js","components/Blogs.js","components/ProtectedRoute.js","components/NotFoundPage.js","components/Navbar.js","components/Setting.js","App.js","store.js","index.js"],"names":["useField","type","defaultedValue","useState","value","setValue","onChange","e","target","clear","token","getConfig","headers","Authorization","newToken","checkUserNameExisted","userName","a","axios","post","res","data","register","newUser","login","user","changeBasicInfo","id","userToUpdate","patch","console","log","changePwd","uploadFile","formData","lsKey","initialState","userNameExisted","storeUserToLocalStorage","window","localStorage","setItem","JSON","stringify","blogService","dispatch","userService","userInfo","userReducer","state","action","loggedInUser","updatedUser","setNotification","message","error","content","setTimeout","notificationReducer","mapDispatchToProps","withRouter","connect","props","password","loginButtonDisabled","length","handleSubmit","preventDefault","from","location","pathname","className","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","required","Button","disabled","Message","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","ValidateInput","fieldName","input","minLength","maxLength","extraRequirement","extraErrorMessage","RedirectToMain","position","top","left","transform","utilService","uploadedFile","url","file","registerSuccess","setRegisterSuccess","passwordConfirm","debouncedUsername","existedUserName","submitButtonDisabled","notification","Transition","visible","animation","duration","right","zIndex","floating","Blogs","isAuthenticated","Component","component","rest","render","NotFoundPage","logout","removeItem","activeItem","setActiveItem","handleNavClick","name","Menu","tabular","Item","active","onClick","Link","Dropdown","item","text","newUserName","uploadedPic","uploadedUrl","newPicture","pwd","newPwd","oldPwd","newPwdConfirm","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","handleBasicInfoChange","FormData","append","handlePwdChange","disableChangeBasicInfoButton","disableChangePwdButton","Field","accept","files","URL","createObjectURL","Image","src","picture","initUser","loggedInUserJson","getItem","parse","path","Setting","history","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2b1f674e.chunk.js","sourcesContent":["import { useState } from 'react'\n\nexport const useField = (type, defaultedValue) => {\n  const [value, setValue] = useState(defaultedValue ? defaultedValue : '')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const clear = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    clear\n  }\n}","// import axios from 'axios'\n// const baseUrl = '/api/blogs'\n\nlet token = null\n\nexport const getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst destroyToken = () => {\n  token = null\n}\n\nexport default { setToken, destroyToken }","import axios from 'axios'\nimport { getConfig } from '../services/blogs'\nconst baseUrl = '/api/user'\n\n// res.data = ctx.body of backend\n\nconst checkUserNameExisted = async userName => {\n  const res = await axios.post(`${baseUrl}/isExist`, { userName })\n  return res.data\n}\n\nconst register = async newUser => {\n  const res = await axios.post(`${baseUrl}/register`, newUser)\n  return res.data\n}\n\nconst login = async user => {\n  const res = await axios.post(`${baseUrl}/login`, user)\n  return res.data\n}\n\nconst changeBasicInfo = async (id, userToUpdate) => {\n  const res = await axios.patch(`${baseUrl}/changeInfo/${id}`, userToUpdate, getConfig())\n  console.log('returnUser', res.data)\n  return res.data\n}\n\nconst changePwd = async (id, userToUpdate) => {\n  const res =await axios.patch(`${baseUrl}/changePwd/${id}`, userToUpdate, getConfig())\n  return res.data\n}\n\nexport default {\n  checkUserNameExisted,\n  register,\n  login,\n  changeBasicInfo,\n  changePwd\n}\n\n","import axios from 'axios'\nimport { getConfig } from '../services/blogs'\nconst baseUrl = '/api/utils'\n\nconst uploadFile = async formData => {\n  const res = await axios.post(`${baseUrl}/upload`, formData, getConfig())\n  console.log('return', res.data)\n  return res.data\n}\n\nexport default {\n  uploadFile\n}","import userService from '../services/user'\nimport blogService from '../services/blogs'\nimport utilService from '../services/utils'\n\nexport const lsKey = 'loggedInUser'\n\nexport const initialState = {\n  userNameExisted: false\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'REGISTER':\n    return initialState\n  case 'USERNAME_EXISTED':\n    return { ...state, userNameExisted: action.userNameExisted }\n  case 'SET_USER':\n    return action.loggedInUser\n  case 'CLEAR_USER':\n    return initialState\n  case 'UPDATE_USER_INFO':\n    return action.updatedUser\n  default:\n    return state\n  }\n}\n\nconst storeUserToLocalStorage = user => {\n  window.localStorage.setItem(lsKey, JSON.stringify(user))\n  blogService.setToken(user.token)\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedInUserJson = window.localStorage.getItem(lsKey)\n    if (loggedInUserJson) {\n      const loggedInUser = JSON.parse(loggedInUserJson)\n      blogService.setToken(loggedInUser.token)\n      dispatch({\n        type: 'SET_USER',\n        loggedInUser\n      })\n    }\n  }\n}\n\nexport const checkUserNameExisted = userName => {\n  return async dispatch => {\n    const userInfo = await userService.checkUserNameExisted(userName)\n    const userNameExisted = userInfo.data ? true : false\n    dispatch({\n      type: 'USERNAME_EXISTED',\n      userNameExisted\n    })\n  }\n}\n\nexport const register = newUser => {\n  return async dispatch => {\n    await userService.register(newUser)\n    dispatch({\n      type: 'REGISTER'\n    })\n  }\n}\n\nexport const login = user => {\n  return async dispatch => {\n    const res = await userService.login(user)\n    const loggedInUser = res.data\n    storeUserToLocalStorage(loggedInUser)\n    dispatch({\n      type: 'SET_USER',\n      loggedInUser\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    blogService.destroyToken()\n    window.localStorage.removeItem(lsKey)\n    dispatch({\n      type: 'CLEAR_USER'\n    })\n  }\n}\n\nexport const changeBasicInfo = (id, newUserName, formData) => {\n  return async dispatch => {\n    let userToUpdate = {\n      newUserName\n    }\n    if(formData !== null){\n      // upload picture and get the saved picture url from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: {url: ...}\n     * }\n     */\n      const uploadedUrl = uploadedPic.data.url\n      userToUpdate = {\n        ...userToUpdate,\n        newPicture: uploadedUrl\n      }\n    }\n\n    const res = await userService.changeBasicInfo(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\n\nexport const changePwd = (id, pwd, newPwd) => {\n  return async dispatch => {\n    const userToUpdate = {\n      pwd,\n      newPwd\n    }\n    const res = await userService.changePwd(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\nexport default userReducer\n\n","const notificationReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return {}\n  default:\n    return state\n  }\n}\n\nexport const setNotification = ({ message, error = false }) => {\n  const content = {\n    message,\n    error\n  }\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, 5000)\n  }\n}\n\nexport default notificationReducer","/**\n * @description login form\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport { useField } from '../hooks/useField'\nimport { login } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst LoginForm = props => {\n  const userName = useField('text')\n  const password = useField('password')\n\n  const loginButtonDisabled = userName.value.length === 0 || password.value.length === 0\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const user = {\n      userName: userName.value,\n      password: password.value\n    }\n    try {\n      await props.login(user)\n    } catch (e) {\n      props.setNotification({ message: 'Login failed, wrong username or password', error: true })\n    }\n  }\n\n  const { from } = props.location.state || { from: { pathname: '/home' } }\n  if (props.user.token) {\n    props.setNotification({ message: 'You have logged in', error: false })\n    return (\n      <div className='redirect'>\n        <Redirect to={from} />\n      </div>\n\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Log in to your account\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input className='userName' fluid icon='user' iconPosition='left' placeholder='User Name' {...userName} required />\n              <Form.Input\n                className='pwd'\n                fluid\n                icon='lock'\n                placeholder='Password'\n                {...password}\n                required\n              />\n              <Button type='submit' color='teal' fluid size='large' disabled={loginButtonDisabled}>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to='/register'>Sign Up</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  setNotification\n}\n\nLoginForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LoginForm)\n)","/**\n * @description Simple debounce so that the api won't be called rapidly\n */\nimport { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      return () => {\n        clearTimeout(handler)\n      }\n    }, [value, delay]\n  )\n\n  return debouncedValue\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ValidateInput = props => {\n  const { fieldName, input, minLength, maxLength, extraRequirement, extraErrorMessage } = props\n  if (!input) {\n    return null\n  }\n  if ((minLength && maxLength) && (input.length < minLength || input.length > maxLength)) {\n    return (\n      <p style={{ color: 'red' }}>\n        {fieldName} should be between {minLength} and {maxLength} characters\n      </p>\n    )\n  }\n  if (extraRequirement === false) {\n    return (\n      <p style={{ color: 'red' }}>\n        {extraErrorMessage}\n      </p>\n    )\n  }\n  return (\n    <p style={{ color: 'green' }}>\n      Valid {fieldName}\n    </p>\n  )\n}\n\nValidateInput.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  extraRequirement: PropTypes.bool,\n  extraErrorMessage: PropTypes.string\n}\n\nexport default ValidateInput","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst RedirectToMain = () => {\n  return (\n    <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}>\n      <h3>You have already logged in, please go to the\n        <Link to='/home'> main page</Link> directly</h3>\n    </div>\n  )\n}\n\nexport default RedirectToMain","/**\n * @description register form\n */\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { checkUserNameExisted, register } from '../reducers/userReducer'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ValidateInput from './ValidateInput'\nimport RedirectToMain from './RedirectToMain'\nimport { uploadFile } from '../reducers/fileReducer'\n\nconst RegisterForm = props => {\n  const [registerSuccess, setRegisterSuccess] = useState(false)\n  const userName = useField('text')\n  const password = useField('password')\n  const passwordConfirm = useField('password')\n  const debouncedUsername = useDebounce(userName.value, 500)\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const submitButtonDisabled = props.user.userNameExisted || userName.value.length < 3 || userName.value.length > 255 || password.value.length < 3 || password.value.length > 255 || password.value !== passwordConfirm.value\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const newUser = {\n      userName: userName.value,\n      password: passwordConfirm.value\n    }\n    try {\n      await props.register(newUser)\n      setRegisterSuccess(true)\n      //props.history.push('/login')\n      props.setNotification({ message: 'Register succeeded, please log in', error: false })\n    } catch (e) {\n      props.setNotification({ message: 'Register failed', error: true })\n    }\n  }\n\n  if (registerSuccess) {\n    return (\n      <div className='redirect'>\n        <Redirect to='/login' />\n      </div>\n    )\n  }\n\n  if (props.user.token) {\n    return (\n      <RedirectToMain />\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Sign Up\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input className='userName' fluid icon='user' iconPosition='left' placeholder='Username (between 3 and 255 characters)'\n                {...userName} required\n              />\n              <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n                extraRequirement={!props.user.userNameExisted} extraErrorMessage={'User name is already existed'} />\n              <Form.Input\n                className='pwd'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password (between 3 and 255 characters)'\n                {...password}\n                required\n              />\n              <ValidateInput fieldName={'Password'} input={password.value} minLength={3} maxLength={255} />\n              <Form.Input\n                className='pwdConfirm'\n                fluid\n                placeholder='Confirm Your Password'\n                {...passwordConfirm}\n                required\n              />\n              <ValidateInput fieldName={'Password confirmation'} input={passwordConfirm.value}\n                extraRequirement={password.value === passwordConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n              <Button color='teal' fluid size='large' disabled={submitButtonDisabled}>\n                Sign Up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>Already have an account? <Link to='/login'>Back to login</Link></Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    file: state.file\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  register,\n  setNotification,\n  uploadFile\n}\n\nRegisterForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  checkUserNameExisted: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegisterForm)\n)\n","import utilService from '../services/utils'\n\n\nconst fileReducer = (state={}, action) => {\n  switch(action.type){\n  case 'UPLOAD':\n    return action.url\n  default:\n    return state\n  }\n}\n\nexport const uploadFile = formData => {\n  return async dispatch => {\n    const uploadedFile = await utilService.uploadFile(formData)\n    dispatch({\n      type: 'UPLOAD',\n      url: uploadedFile.data\n    })\n  }\n}\n\nexport default fileReducer","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Message, Transition } from 'semantic-ui-react'\n\nconst Notification = props => {\n  const { message, error } = props.notification\n\n  const style = {\n    position: 'fixed !important',\n    top: '32px',\n    right: '0',\n    left: '0',\n    textAlign: 'center',\n    zIndex: '10000'\n  }\n\n  if(!message) return null\n\n  return (\n    <Transition visible={!!message} animation='fly down' duration={250}>\n      <div style={style}>\n        {!error ? (\n          <Message floating color='green' size='large'>\n            {message}\n          </Message>\n        ) : (\n          <Message floating color='red' size='large'>\n            {message}\n          </Message>\n        )}\n      </div>\n\n\n    </Transition>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  }\n}\n\nNotification.propTypes = {\n  notification: PropTypes.object.isRequired\n}\n\nexport default connect(\n  mapStateToProps\n)(Notification)","import React from 'react'\n\nconst Blogs = () => {\n  return (\n    <div>Welcom to microblog</div>\n  )\n}\n\nexport default Blogs","import React from 'react'\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst ProtectedRoute = props => {\n  const isAuthenticated = props.user.token ? true : false\n  const { component: Component, ...rest } = props\n\n  return (\n    <Route {...rest} render={(props) => (\n      isAuthenticated\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\n// const mapDispatchToProps = {\n//   initUser\n// }\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object.isRequired,\n  component: PropTypes.func.isRequired,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    //mapDispatchToProps\n  )(ProtectedRoute)\n)","import React from 'react'\n\nconst NotFoundPage = () => {\n  return <div>The page cannot be found...</div>\n}\n\nexport default NotFoundPage","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown, Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../reducers/userReducer'\n\nconst Navbar = props => {\n\n  const [activeItem, setActiveItem ] = useState(props.user.token ? 'Home': 'Login')\n\n  const handleNavClick = (e, { name }) => {\n    setActiveItem(name)\n  }\n  if(!props.user.token) {\n    return (\n      <Menu tabular>\n        <Menu.Item\n          name='Login'\n          active={activeItem==='Login'}\n          onClick={handleNavClick}\n          as={Link}\n          to='/login'/>\n        <Menu.Item\n          name='Register'\n          active={activeItem==='Register'}\n          onClick={handleNavClick}\n          as={Link}\n          to='/register'/>\n      </Menu>\n    )\n  }\n  return (\n    <Menu tabular>\n      <Menu.Item\n        name='Home'\n        active={activeItem==='Home'}\n        onClick={handleNavClick}\n        as={Link}\n        to='/home'/>\n      <Menu.Item\n        name='My blogs'\n        active={activeItem==='My blogs'}\n        onClick={handleNavClick}\n        as={Link}\n        to='/myblogs'/>\n      <Menu.Item\n        name='Discover'\n        active={activeItem==='Discover'}\n        onClick={handleNavClick}\n        as={Link}\n        to='/discover'/>\n      <Menu.Menu\n        position='right'\n      >\n        <Dropdown item text='Setting'>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              as={Link} to='/setting'>\n              Account setting\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <Button onClick={props.logout}><Link to='/login'>Logout</Link></Button>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  logout\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Form, Grid, Header, Button, Image } from 'semantic-ui-react'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport ValidateInput from './ValidateInput'\nimport { checkUserNameExisted, changeBasicInfo, changePwd } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Setting = props => {\n  const userName = useField('text', props.user.userName)\n  const debouncedUsername = useDebounce(userName.value, 500)\n  const oldPwd = useField('password')\n  const newPwd = useField('password')\n  const newPwdConfirm = useField('password')\n\n  const [selectedFile, setSelectedFile]=useState(null)\n  const [previewUrl, setPreviewUrl ] = useState('')\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const handleBasicInfoChange = async e => {\n    e.preventDefault()\n    let formData = null\n    if(selectedFile !== null){\n      formData = new FormData()\n      formData.append('file', selectedFile)\n    }\n    try{\n      await props.changeBasicInfo(props.user.id, userName.value, formData )\n      props.setNotification({ message: 'You have changed your basic information', error: false })\n    } catch (e){\n      props.setNotification( { message:'Fail to change basic information', error: true })\n    }\n  }\n\n  const handleFileChange = e => {\n    const file = e.target.files[0]\n    setSelectedFile(file)\n    setPreviewUrl(URL.createObjectURL(file))\n  }\n\n  const handlePwdChange = async e => {\n    e.preventDefault()\n    try{\n      await props.changePwd(props.user.id, oldPwd.value, newPwd.value)\n      props.setNotification({ message: 'You have changed your password', error: false })\n    }catch (e){\n      props.setNotification( { message:'Fail to change password, please make sure that your old password is correct', error: true })\n    }\n    oldPwd.clear()\n    newPwd.clear()\n    newPwdConfirm.clear()\n  }\n\n  const disableChangeBasicInfoButton = (props.user.userNameExisted && userName.value !== props.user.userName) ||\n                                        userName.value.length < 3 || userName.value.length > 255\n  const disableChangePwdButton = newPwd.value.length <3 || newPwd.value.length>255 || newPwd.value!==newPwdConfirm.value\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n        Account Setting\n        </Header>\n        <Header as='h3' color='teal' textAlign='center'>\n        Basic information\n        </Header>\n        <Form onSubmit={handleBasicInfoChange}>\n          <Form.Field>\n            <label>User name</label>\n            <input {...userName}/>\n            <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n              extraRequirement={!props.user.userNameExisted || userName.value===props.user.userName} extraErrorMessage={'User name is already existed'} />\n          </Form.Field>\n          <Form.Field>\n            <label>Change head portrait</label>\n            <Form.Input type='file' accept='image/*' onChange={handleFileChange} />\n            <Image src={previewUrl!=='' ? previewUrl : props.user.picture} size='small' />\n          </Form.Field>\n          <Button color='teal' fluid size='large' disabled={disableChangeBasicInfoButton}>\n            Save basic information changes\n          </Button>\n        </Form>\n        <Header as='h3' color='teal' textAlign='center'>\n            Password\n        </Header>\n        <Form onSubmit={handlePwdChange}>\n          <Form.Field>\n            <label>Current password</label>\n            <input placeholder='current password' {...oldPwd}/>\n          </Form.Field>\n\n          <Form.Field>\n            <label>New password</label>\n            <input placeholder='new password' {...newPwd}/>\n            <ValidateInput fieldName={'Password'} input={newPwd.value} minLength={3} maxLength={255} />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm new password</label>\n            <input placeholder='new password confirmation' {...newPwdConfirm}/>\n          </Form.Field>\n          <ValidateInput fieldName={'Password confirmation'} input={newPwdConfirm.value}\n            extraRequirement={newPwd.value === newPwdConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n          <Button color='teal' fluid size='large' disabled={disableChangePwdButton}>\n            Save new password\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state  => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  changeBasicInfo,\n  changePwd,\n  setNotification\n}\n\nSetting.propTypes = {\n  checkUserNameExisted: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  changeBasicInfo: PropTypes.func.isRequired,\n  changePwd:PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Setting)","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport Notification from './components/Notification'\nimport { initUser } from './reducers/userReducer'\nimport Blogs from './components/Blogs'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFoundPage from './components/NotFoundPage'\nimport Navbar from './components/Navbar'\nimport Setting from './components/Setting'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    console.log('init')\n    props.initUser()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Notification />\n      <Router>\n        <Navbar />\n        <Switch>\n          <ProtectedRoute path='/home' component={Blogs} />\n          <ProtectedRoute path='/setting' component={Setting} />\n          <Route path='/login' render={(history) => <div>\n            <LoginForm history={history} />\n          </div>} />\n          <Route path='/register' render={(history) => <div>\n            <RegisterForm history={history} />\n          </div>} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  initUser\n}\n\nApp.propTypes = {\n  initUser: PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport userReducer from './reducers/userReducer'\nimport notificationReducer from './reducers/notificationReducer'\n\nconst reducer = combineReducers({\n  user: userReducer,\n  notification: notificationReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}