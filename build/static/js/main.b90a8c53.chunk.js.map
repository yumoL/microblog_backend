{"version":3,"sources":["hooks/useField.js","services/utils.js","services/user.js","reducers/userReducer.js","reducers/notificationReducer.js","components/LoginForm.js","hooks/useDebounce.js","components/ValidateInput.js","components/RedirectToMain.js","components/RegisterForm.js","components/Notification.js","components/blogPage/BlogInput.js","services/blogs.js","reducers/blogReducer.js","components/FrontPage.js","components/ProtectedRoute.js","components/NotFoundPage.js","components/Navbar.js","components/Setting.js","App.js","store.js","index.js"],"names":["useField","type","defaultedValue","useState","value","setValue","onChange","e","target","clear","token","getConfig","headers","Authorization","uploadFile","formData","a","axios","post","res","console","log","data","setToken","newToken","destroyToken","checkUserNameExisted","userName","register","newUser","login","user","changeBasicInfo","id","userToUpdate","patch","changePwd","lsKey","initialState","userNameExisted","storeUserToLocalStorage","window","localStorage","setItem","JSON","stringify","utilService","dispatch","userService","userInfo","logout","removeItem","userReducer","state","action","loggedInUser","updatedUser","setNotification","message","error","timeout","content","setTimeout","notificationReducer","mapDispatchToProps","withRouter","connect","props","password","loginButtonDisabled","length","handleSubmit","preventDefault","from","location","pathname","className","to","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","required","Button","disabled","Message","useDebounce","delay","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","ValidateInput","fieldName","input","minLength","maxLength","extraRequirement","extraErrorMessage","RedirectToMain","position","top","left","transform","file","registerSuccess","setRegisterSuccess","passwordConfirm","debouncedUsername","existedUserName","submitButtonDisabled","notification","Transition","visible","animation","duration","right","zIndex","floating","BlogInput","files","setFiles","urls","setUrls","FormData","map","append","createBlog","userId","Field","TextArea","minHeight","accept","fileToAdd","URL","createObjectURL","Row","columns","url","key","Image","src","newBlog","blogReducer","publishedBlog","uploadedPic","blogService","blog","isAuthenticated","Component","component","rest","render","NotFoundPage","activeItem","setActiveItem","handleNavClick","name","Menu","tabular","Item","active","onClick","Link","Dropdown","item","text","newUserName","uploadedUrl","newPicture","pwd","newPwd","oldPwd","newPwdConfirm","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","handleBasicInfoChange","handlePwdChange","disableChangeBasicInfoButton","disableChangePwdButton","picture","initUser","loggedInUserJson","getItem","parse","path","FrontPage","Setting","history","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","next","jwtDecode","exp","Date","now","alert","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b90a8c53.chunk.js","sourcesContent":["import { useState } from 'react'\n\nexport const useField = (type, defaultedValue) => {\n  const [value, setValue] = useState(defaultedValue ? defaultedValue : '')\n\n  const onChange = e => {\n    setValue(e.target.value)\n  }\n\n  const clear = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    value,\n    onChange,\n    clear\n  }\n}","import axios from 'axios'\nconst baseUrl = '/api/utils'\n\nlet token = null\n\nexport const getConfig = () => ({\n  headers: { Authorization: token }\n})\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst destroyToken = () => {\n  token = null\n}\n\nconst uploadFile = async formData => {\n  const res = await axios.post(`${baseUrl}/upload`, formData, getConfig())\n  console.log('return', res.data)\n  return res.data\n}\n\nexport default {\n  uploadFile,\n  setToken,\n  destroyToken\n}","import axios from 'axios'\nimport { getConfig } from '../services/utils'\nconst baseUrl = '/api/user'\n\n// res.data = ctx.body of backend\n\nconst checkUserNameExisted = async userName => {\n  const res = await axios.post(`${baseUrl}/isExist`, { userName })\n  return res.data\n}\n\nconst register = async newUser => {\n  const res = await axios.post(`${baseUrl}/register`, newUser)\n  return res.data\n}\n\nconst login = async user => {\n  const res = await axios.post(`${baseUrl}/login`, user)\n  return res.data\n}\n\nconst changeBasicInfo = async (id, userToUpdate) => {\n  const res = await axios.patch(`${baseUrl}/changeInfo/${id}`, userToUpdate, getConfig())\n  console.log('returnUser', res.data)\n  return res.data\n}\n\nconst changePwd = async (id, userToUpdate) => {\n  const res =await axios.patch(`${baseUrl}/changePwd/${id}`, userToUpdate, getConfig())\n  return res.data\n}\n\nexport default {\n  checkUserNameExisted,\n  register,\n  login,\n  changeBasicInfo,\n  changePwd\n}\n\n","import userService from '../services/user'\nimport utilService from '../services/utils'\n\nexport const lsKey = 'loggedInUser'\n\nexport const initialState = {\n  userNameExisted: false\n}\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'REGISTER':\n    return initialState\n  case 'USERNAME_EXISTED':\n    return { ...state, userNameExisted: action.userNameExisted }\n  case 'SET_USER':\n    return action.loggedInUser\n  case 'CLEAR_USER':\n    return initialState\n  case 'UPDATE_USER_INFO':\n    return action.updatedUser\n  default:\n    return state\n  }\n}\n\nconst storeUserToLocalStorage = user => {\n  window.localStorage.setItem(lsKey, JSON.stringify(user))\n  utilService.setToken(user.token)\n}\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedInUserJson = window.localStorage.getItem(lsKey)\n    if (loggedInUserJson) {\n      const loggedInUser = JSON.parse(loggedInUserJson)\n      utilService.setToken(loggedInUser.token)\n      dispatch({\n        type: 'SET_USER',\n        loggedInUser\n      })\n    }\n  }\n}\n\nexport const checkUserNameExisted = userName => {\n  return async dispatch => {\n    const userInfo = await userService.checkUserNameExisted(userName)\n    const userNameExisted = userInfo.data ? true : false\n    dispatch({\n      type: 'USERNAME_EXISTED',\n      userNameExisted\n    })\n  }\n}\n\nexport const register = newUser => {\n  return async dispatch => {\n    await userService.register(newUser)\n    dispatch({\n      type: 'REGISTER'\n    })\n  }\n}\n\nexport const login = user => {\n  return async dispatch => {\n    const res = await userService.login(user)\n    const loggedInUser = res.data\n    storeUserToLocalStorage(loggedInUser)\n    dispatch({\n      type: 'SET_USER',\n      loggedInUser\n    })\n  }\n}\n\nexport const logout = () => {\n  return async dispatch => {\n    utilService.destroyToken()\n    window.localStorage.removeItem(lsKey)\n    dispatch({\n      type: 'CLEAR_USER'\n    })\n  }\n}\n\nexport const changeBasicInfo = (id, newUserName, formData) => {\n  return async dispatch => {\n    let userToUpdate = {\n      newUserName\n    }\n    if(formData !== null){\n      // upload picture and get the saved picture url from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: [url]\n     * }\n     */\n      const uploadedUrl = uploadedPic.data[0] //the first element of data array as we only have one picture here\n      console.log('suc model', uploadedPic.data[0])\n      userToUpdate = {\n        ...userToUpdate,\n        newPicture: uploadedUrl\n      }\n    }\n\n    const res = await userService.changeBasicInfo(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\n\nexport const changePwd = (id, pwd, newPwd) => {\n  return async dispatch => {\n    const userToUpdate = {\n      pwd,\n      newPwd\n    }\n    const res = await userService.changePwd(id, userToUpdate)\n    const updatedUser = res.data\n    storeUserToLocalStorage(updatedUser)\n    dispatch({\n      type: 'UPDATE_USER_INFO',\n      updatedUser\n    })\n  }\n}\nexport default userReducer\n\n","const notificationReducer = (state = {}, action) => {\n  switch (action.type) {\n  case 'SET_NOTIFICATION':\n    return action.content\n  case 'CLEAR_NOTIFICATION':\n    return {}\n  default:\n    return state\n  }\n}\n\nexport const setNotification = ({ message, error = false, timeout=5000 }) => {\n  const content = {\n    message,\n    error\n  }\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      content\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      })\n    }, timeout)\n  }\n}\n\nexport default notificationReducer","/**\n * @description login form\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport { useField } from '../hooks/useField'\nimport { login } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst LoginForm = props => {\n  const userName = useField('text')\n  const password = useField('password')\n\n  const loginButtonDisabled = userName.value.length === 0 || password.value.length === 0\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const user = {\n      userName: userName.value,\n      password: password.value\n    }\n    try {\n      await props.login(user)\n    } catch (e) {\n      props.setNotification({ message: 'Login failed, wrong username or password', error: true })\n    }\n  }\n\n  const { from } = props.location.state || { from: { pathname: '/home' } }\n  if (props.user.token) {\n    props.setNotification({ message: 'You have logged in', error: false })\n    return (\n      <div className='redirect'>\n        <Redirect to={from} />\n      </div>\n\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Log in to your account\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input className='userName' fluid icon='user' iconPosition='left' placeholder='User Name' {...userName} required />\n              <Form.Input\n                className='pwd'\n                fluid\n                icon='lock'\n                placeholder='Password'\n                {...password}\n                required\n              />\n              <Button type='submit' color='teal' fluid size='large' disabled={loginButtonDisabled}>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to='/register'>Sign Up</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  setNotification\n}\n\nLoginForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  login: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(LoginForm)\n)","/**\n * @description Simple debounce so that the api won't be called rapidly\n */\nimport { useState, useEffect } from 'react'\n\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value)\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => {\n        setDebouncedValue(value)\n      }, delay)\n\n      return () => {\n        clearTimeout(handler)\n      }\n    }, [value, delay]\n  )\n\n  return debouncedValue\n}","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ValidateInput = props => {\n  const { fieldName, input, minLength, maxLength, extraRequirement, extraErrorMessage } = props\n  if (!input) {\n    return null\n  }\n  if ((minLength && maxLength) && (input.length < minLength || input.length > maxLength)) {\n    return (\n      <p style={{ color: 'red' }}>\n        {fieldName} should be between {minLength} and {maxLength} characters\n      </p>\n    )\n  }\n  if (extraRequirement === false) {\n    return (\n      <p style={{ color: 'red' }}>\n        {extraErrorMessage}\n      </p>\n    )\n  }\n  return (\n    <p style={{ color: 'green' }}>\n      Valid {fieldName}\n    </p>\n  )\n}\n\nValidateInput.propTypes = {\n  fieldName: PropTypes.string.isRequired,\n  input: PropTypes.string.isRequired,\n  minLength: PropTypes.number,\n  maxLength: PropTypes.number,\n  extraRequirement: PropTypes.bool,\n  extraErrorMessage: PropTypes.string\n}\n\nexport default ValidateInput","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst RedirectToMain = () => {\n  return (\n    <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }}>\n      <h3>You have already logged in, please go to the\n        <Link to='/home'> main page</Link> directly</h3>\n    </div>\n  )\n}\n\nexport default RedirectToMain","/**\n * @description register form\n */\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Grid, Header, Form, Segment, Button, Message } from 'semantic-ui-react'\nimport { Link, withRouter, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { checkUserNameExisted, register } from '../reducers/userReducer'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport { setNotification } from '../reducers/notificationReducer'\nimport ValidateInput from './ValidateInput'\nimport RedirectToMain from './RedirectToMain'\n\n\nconst RegisterForm = props => {\n  const [registerSuccess, setRegisterSuccess] = useState(false)\n  const userName = useField('text')\n  const password = useField('password')\n  const passwordConfirm = useField('password')\n  const debouncedUsername = useDebounce(userName.value, 500)\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const submitButtonDisabled = props.user.userNameExisted || userName.value.length < 3 || userName.value.length > 255 || password.value.length < 3 || password.value.length > 255 || password.value !== passwordConfirm.value\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    const newUser = {\n      userName: userName.value,\n      password: passwordConfirm.value\n    }\n    try {\n      await props.register(newUser)\n      setRegisterSuccess(true)\n      //props.history.push('/login')\n      props.setNotification({ message: 'Register succeeded, please log in', error: false })\n    } catch (e) {\n      props.setNotification({ message: 'Register failed', error: true })\n    }\n  }\n\n  if (registerSuccess) {\n    return (\n      <div className='redirect'>\n        <Redirect to='/login' />\n      </div>\n    )\n  }\n\n  if (props.user.token) {\n    return (\n      <RedirectToMain />\n    )\n  }\n\n  return (\n    <div>\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='teal' textAlign='center'>\n            Sign Up\n          </Header>\n          <Form size='large' onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input className='userName' fluid icon='user' iconPosition='left' placeholder='Username (between 3 and 255 characters)'\n                {...userName} required\n              />\n              <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n                extraRequirement={!props.user.userNameExisted} extraErrorMessage={'User name is already existed'} />\n              <Form.Input\n                className='pwd'\n                fluid\n                icon='lock'\n                iconPosition='left'\n                placeholder='Password (between 3 and 255 characters)'\n                {...password}\n                required\n              />\n              <ValidateInput fieldName={'Password'} input={password.value} minLength={3} maxLength={255} />\n              <Form.Input\n                className='pwdConfirm'\n                fluid\n                placeholder='Confirm Your Password'\n                {...passwordConfirm}\n                required\n              />\n              <ValidateInput fieldName={'Password confirmation'} input={passwordConfirm.value}\n                extraRequirement={password.value === passwordConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n              <Button color='teal' fluid size='large' disabled={submitButtonDisabled}>\n                Sign Up\n              </Button>\n            </Segment>\n          </Form>\n          <Message>Already have an account? <Link to='/login'>Back to login</Link></Message>\n        </Grid.Column>\n      </Grid>\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    file: state.file\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  register,\n  setNotification\n}\n\nRegisterForm.propTypes = {\n  history: PropTypes.object.isRequired,\n  checkUserNameExisted: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegisterForm)\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Message, Transition } from 'semantic-ui-react'\n\nconst Notification = props => {\n  const { message, error } = props.notification\n\n  const style = {\n    position: 'fixed !important',\n    top: '32px',\n    right: '0',\n    left: '0',\n    textAlign: 'center',\n    zIndex: '10000'\n  }\n\n  if(!message) return null\n\n  return (\n    <Transition visible={!!message} animation='fly down' duration={250}>\n      <div style={style}>\n        {!error ? (\n          <Message floating color='green' size='large'>\n            {message}\n          </Message>\n        ) : (\n          <Message floating color='red' size='large'>\n            {message}\n          </Message>\n        )}\n      </div>\n\n\n    </Transition>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  }\n}\n\nNotification.propTypes = {\n  notification: PropTypes.object.isRequired\n}\n\nexport default connect(\n  mapStateToProps\n)(Notification)","import React, { useState } from 'react'\nimport { Form, TextArea, Button, Grid, Image } from 'semantic-ui-react'\nimport { useField } from '../../hooks/useField'\nimport PropTypes from 'prop-types'\n\nconst BlogInput = props => {\n  const [files, setFiles ] = useState([])\n  const [urls, setUrls ] = useState([])\n  const content = useField('text')\n\n  const handleFileChange = e => {\n    const fileToAdd = e.target.files[0]\n    setFiles([...files, fileToAdd])\n    setUrls([...urls, URL.createObjectURL(fileToAdd)])\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n    let formData = null\n    if(files.length > 0){\n      formData = new FormData()\n      files.map(file => formData.append('file',file))\n    }\n    await props.createBlog(props.userId, content.value, formData )\n    setFiles([])\n    setUrls([])\n    content.clear()\n    props.setNotification({ message:'You created a blog', error: false })\n  }\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n          <TextArea placeholder='new blog...(click Choose Files below to upload max 5 images)' {...content} style={{ minHeight: 100 }} clear='clear'/>\n          <input type='file' accept='image/*' onChange={handleFileChange}/>\n          <Grid>\n            <Grid.Row columns={5}>\n              {urls.map(url => <Grid.Column key={url}>\n                <Image src={url} size='small' />\n              </Grid.Column>)}\n            </Grid.Row>\n\n          </Grid>\n        </Form.Field>\n        <Button>Publish your microblog</Button>\n      </Form>\n    </div>\n  )\n}\n\nBlogInput.propTypes = {\n  userId: PropTypes.number.isRequired,\n  createBlog: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n}\n\nexport default BlogInput","import axios from 'axios'\nimport { getConfig } from './utils'\nconst baseUrl = '/api/blog'\n\nconst createBlog = async (userId, newBlog ) => {\n  const res = await axios.post(`${baseUrl}/create/${userId}`, newBlog, getConfig())\n  return res.data\n}\nexport default { createBlog  }","import blogService from '../services/blogs'\nimport utilService from '../services/utils'\n\nconst blogReducer = (state={}, action) => {\n  switch (action.type) {\n  case 'CREATE_BLOG':\n    return action.publishedBlog\n  default:\n    return state\n  }\n}\n\nexport const createBlog = (userId, content, formData) => {\n  return async dispatch => {\n    let newBlog = {\n      content\n    }\n\n    if(formData !== null){\n      // upload picture and get the urls of saved pictures from backend\n      const uploadedPic = await utilService.uploadFile(formData)\n      /**\n     * uploadedPic = {\n     *  errno: 0\n     *  data: [url]\n     * }\n     */\n      const urls = uploadedPic.data\n      console.log('suc model', uploadedPic.data[0])\n      newBlog = {\n        ...newBlog,\n        urls\n      }\n    }\n    const res = await blogService.createBlog(userId, newBlog)\n    const publishedBlog = res.data\n    dispatch({\n      type: 'CREATE_BLOG',\n      publishedBlog\n    })\n  }\n}\n\nexport default blogReducer","import React from 'react'\nimport BlogInput from './blogPage/BlogInput'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createBlog } from '../reducers/blogReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst FrontPage = props => {\n  return (\n    <div>\n      <BlogInput userId={props.user.id} createBlog={props.createBlog} setNotification={props.setNotification}/>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    blog: state.blog\n  }\n}\n\nconst mapDispatchToProps = {\n  createBlog,\n  setNotification\n}\n\nFrontPage.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  user: PropTypes.object,\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FrontPage)\n","import React from 'react'\nimport { Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst ProtectedRoute = props => {\n  const isAuthenticated = props.user.token ? true : false\n  const { component: Component, ...rest } = props\n\n  return (\n    <Route {...rest} render={(props) => (\n      isAuthenticated\n        ? <Component {...props} />\n        : <Redirect to={{\n          pathname: '/login',\n          state: { from: props.location }\n        }} />\n    )} />\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\n// const mapDispatchToProps = {\n//   initUser\n// }\n\nProtectedRoute.propTypes = {\n  user: PropTypes.object.isRequired,\n  component: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    //mapDispatchToProps\n  )(ProtectedRoute)\n)","import React from 'react'\n\nconst NotFoundPage = () => {\n  return <div>The page cannot be found...</div>\n}\n\nexport default NotFoundPage","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Menu, Dropdown, Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { logout } from '../reducers/userReducer'\n\nconst Navbar = props => {\n\n  const [activeItem, setActiveItem ] = useState(props.user.token ? 'Home': 'Login')\n\n  const handleNavClick = (e, { name }) => {\n    setActiveItem(name)\n  }\n  if(!props.user.token) {\n    return (\n      <Menu tabular>\n        <Menu.Item\n          name='Login'\n          active={activeItem==='Login'}\n          onClick={handleNavClick}\n          as={Link}\n          to='/login'/>\n        <Menu.Item\n          name='Register'\n          active={activeItem==='Register'}\n          onClick={handleNavClick}\n          as={Link}\n          to='/register'/>\n      </Menu>\n    )\n  }\n  return (\n    <Menu tabular>\n      <Menu.Item\n        name='Home'\n        active={activeItem==='Home'}\n        onClick={handleNavClick}\n        as={Link}\n        to='/home'/>\n      <Menu.Item\n        name='My blogs'\n        active={activeItem==='My blogs'}\n        onClick={handleNavClick}\n        as={Link}\n        to='/myblogs'/>\n      <Menu.Item\n        name='Discover'\n        active={activeItem==='Discover'}\n        onClick={handleNavClick}\n        as={Link}\n        to='/discover'/>\n      <Menu.Menu\n        position='right'\n      >\n        <Dropdown item text='Setting'>\n          <Dropdown.Menu>\n            <Dropdown.Item\n              as={Link} to='/setting'>\n              Account setting\n            </Dropdown.Item>\n            <Dropdown.Item>\n              <Button onClick={props.logout}><Link to='/login'>Logout</Link></Button>\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Menu.Menu>\n    </Menu>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  logout\n}\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  user: PropTypes.object\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navbar)\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Form, Grid, Header, Button, Image } from 'semantic-ui-react'\nimport { useDebounce } from '../hooks/useDebounce'\nimport { useField } from '../hooks/useField'\nimport ValidateInput from './ValidateInput'\nimport { checkUserNameExisted, changeBasicInfo, changePwd } from '../reducers/userReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst Setting = props => {\n  const userName = useField('text', props.user.userName)\n  const debouncedUsername = useDebounce(userName.value, 500)\n  const oldPwd = useField('password')\n  const newPwd = useField('password')\n  const newPwdConfirm = useField('password')\n\n  const [selectedFile, setSelectedFile]=useState(null)\n  const [previewUrl, setPreviewUrl ] = useState('')\n\n  useEffect(() => {\n    if (debouncedUsername) {\n      const existedUserName = async () => {\n        await props.checkUserNameExisted(debouncedUsername)\n      }\n      existedUserName()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedUsername])\n\n  const handleBasicInfoChange = async e => {\n    e.preventDefault()\n    let formData = null\n    if(selectedFile !== null){\n      formData = new FormData()\n      formData.append('file', selectedFile)\n    }\n    try{\n      await props.changeBasicInfo(props.user.id, userName.value, formData )\n      props.setNotification({ message: 'You have changed your basic information', error: false })\n    } catch (e){\n      props.setNotification( { message:'Fail to change basic information', error: true })\n    }\n  }\n\n  const handleFileChange = e => {\n    const file = e.target.files[0]\n    setSelectedFile(file)\n    setPreviewUrl(URL.createObjectURL(file))\n  }\n\n  const handlePwdChange = async e => {\n    e.preventDefault()\n    try{\n      await props.changePwd(props.user.id, oldPwd.value, newPwd.value)\n      props.setNotification({ message: 'You have changed your password', error: false })\n    }catch (e){\n      props.setNotification( { message:'Fail to change password, please make sure that your old password is correct', error: true })\n    }\n    oldPwd.clear()\n    newPwd.clear()\n    newPwdConfirm.clear()\n  }\n\n  const disableChangeBasicInfoButton = (props.user.userNameExisted && userName.value !== props.user.userName) ||\n                                        userName.value.length < 3 || userName.value.length > 255\n  const disableChangePwdButton = newPwd.value.length <3 || newPwd.value.length>255 || newPwd.value!==newPwdConfirm.value\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n        Account Setting\n        </Header>\n        <Header as='h3' color='teal' textAlign='center'>\n        Basic information\n        </Header>\n        <Form onSubmit={handleBasicInfoChange}>\n          <Form.Field>\n            <label>User name</label>\n            <input {...userName} clear='clear'/>\n            <ValidateInput fieldName={'Username'} input={userName.value} minLength={3} maxLength={255}\n              extraRequirement={!props.user.userNameExisted || userName.value===props.user.userName} extraErrorMessage={'User name is already existed'} />\n          </Form.Field>\n          <Form.Field>\n            <label>Change head portrait</label>\n            <Form.Input type='file' accept='image/*' onChange={handleFileChange} />\n            <Image src={previewUrl!=='' ? previewUrl : props.user.picture} size='small' />\n          </Form.Field>\n          <Button color='teal' fluid size='large' disabled={disableChangeBasicInfoButton}>\n            Save basic information changes\n          </Button>\n        </Form>\n        <Header as='h3' color='teal' textAlign='center'>\n            Password\n        </Header>\n        <Form onSubmit={handlePwdChange}>\n          <Form.Field>\n            <label>Current password</label>\n            <input placeholder='current password' {...oldPwd} clear='clear'/>\n          </Form.Field>\n\n          <Form.Field>\n            <label>New password</label>\n            <input placeholder='new password' {...newPwd} clear='clear' />\n            <ValidateInput fieldName={'Password'} input={newPwd.value} minLength={3} maxLength={255} />\n          </Form.Field>\n          <Form.Field>\n            <label>Confirm new password</label>\n            <input placeholder='new password confirmation' {...newPwdConfirm} clear='clear'/>\n          </Form.Field>\n          <ValidateInput fieldName={'Password confirmation'} input={newPwdConfirm.value}\n            extraRequirement={newPwd.value === newPwdConfirm.value} extraErrorMessage={'Confirmation does not match the password'} />\n          <Button color='teal' fluid size='large' disabled={disableChangePwdButton}>\n            Save new password\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nconst mapStateToProps = state  => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  checkUserNameExisted,\n  changeBasicInfo,\n  changePwd,\n  setNotification\n}\n\nSetting.propTypes = {\n  checkUserNameExisted: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  setNotification: PropTypes.func.isRequired,\n  changeBasicInfo: PropTypes.func.isRequired,\n  changePwd:PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Setting)","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.css'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport Notification from './components/Notification'\nimport { initUser } from './reducers/userReducer'\nimport FrontPage from './components/FrontPage'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport NotFoundPage from './components/NotFoundPage'\nimport Navbar from './components/Navbar'\nimport Setting from './components/Setting'\n\nconst App = (props) => {\n\n  useEffect(() => {\n    console.log('init')\n    props.initUser()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Notification />\n      <Router>\n        <Navbar />\n        <Switch>\n          <ProtectedRoute path='/home' component={FrontPage} />\n          <ProtectedRoute path='/setting' component={Setting} />\n          <Route path='/login' render={(history) => <div>\n            <LoginForm history={history} />\n          </div>} />\n          <Route path='/register' render={(history) => <div>\n            <RegisterForm history={history} />\n          </div>} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps = {\n  initUser\n}\n\nApp.propTypes = {\n  initUser: PropTypes.func.isRequired\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport jwtDecode from 'jwt-decode'\nimport userReducer, { lsKey, logout }from './reducers/userReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport blogReducer from './reducers/blogReducer'\nconst reducer = combineReducers({\n  user: userReducer,\n  notification: notificationReducer,\n  blog: blogReducer\n})\n\nconst checkTokenExpirationMiddleware = store => next => action => {\n  const token =\n    localStorage.getItem(lsKey) &&\n    JSON.parse(localStorage.getItem(lsKey)) &&\n    JSON.parse(localStorage.getItem(lsKey))['token']\n  if (token && jwtDecode(token).exp < Date.now() / 1000) {\n    store.dispatch(logout())\n    window.alert('Your session expired, please login again')\n  }\n  next(action)\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk, checkTokenExpirationMiddleware)\n  )\n)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}